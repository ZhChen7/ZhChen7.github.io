{
    "version": "https://jsonfeed.org/version/1",
    "title": "sunflower • All posts by \"事件绑定\" tag",
    "description": "周琛的博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2019/08/04/JS-Web-API/",
            "url": "http://example.com/2019/08/04/JS-Web-API/",
            "title": "JS-Web-API",
            "date_published": "2019-08-04T08:44:08.000Z",
            "content_html": "<h1 id=\"js-web-api\"><a class=\"markdownIt-Anchor\" href=\"#js-web-api\">#</a> JS-Web-API</h1>\n<blockquote>\n<p>前端 JS 基础面试技巧 - - <strong>JS-Web-API 上</strong></p>\n<p>讲解 JS 在浏览器中具体应用的面试题。包括 <strong>DOM 操作</strong>，<strong>BOM 操作</strong> ，<strong>事件绑定</strong>，<strong>ajax</strong> 和 <strong>存储</strong> ，这些类别的题目。</p>\n</blockquote>\n<h2 id=\"从基础知识到-js-web-api\"><a class=\"markdownIt-Anchor\" href=\"#从基础知识到-js-web-api\">#</a> 从基础知识到 JS-Web-API</h2>\n<blockquote>\n<p>从基础知识 <strong>过渡</strong> 到 JS-Web-API</p>\n</blockquote>\n<ul>\n<li>回顾 JS 基础知识</li>\n<li>JS-Web-API</li>\n<li>总结</li>\n</ul>\n<h3 id=\"回顾-js-基础知识\"><a class=\"markdownIt-Anchor\" href=\"#回顾-js-基础知识\">#</a> 回顾 JS 基础知识</h3>\n<blockquote>\n<p>特点：表面看来并不能哟用于工作中开发代码</p>\n<p>内置函数：Object，Array，Boolean，String …</p>\n<p>内置对象：Math，Json …</p>\n<p>详情请参考：<a href=\"http://zxinc520.com/lcj/%225d2df2cdda85353d5ca8b83f%22\">原型和原型链，闭包和作用域</a> <a href=\"http://zxinc520.com/lcj/%225d2eeda9d797f0309cf6ab02%22\">异步和单线程</a></p>\n<ul>\n<li>我们连在网页上弹出一句 hello world 都不能实现</li>\n</ul>\n</blockquote>\n<p><strong>知识点</strong> ：</p>\n<ul>\n<li>\n<p>变量类型和计算</p>\n</li>\n<li>\n<p>原型和原型链</p>\n</li>\n<li>\n<p>闭包和作用域</p>\n</li>\n<li>\n<p>异步和单线程</p>\n</li>\n<li>\n<p>其它（如日期，Math，各种常用 API）</p>\n</li>\n<li>\n<p>JS 基础知识：<strong>ECMA 262 标准</strong></p>\n</li>\n<li>\n<p>JS-Web-API ：<strong>W3C 标准</strong></p>\n</li>\n</ul>\n<h3 id=\"js-web-api-2\"><a class=\"markdownIt-Anchor\" href=\"#js-web-api-2\">#</a> JS-Web-API</h3>\n<blockquote>\n<p>JS-Web-API</p>\n</blockquote>\n<p><strong>W3C 标准中关于 JS 的规定有</strong> ：</p>\n<ul>\n<li>DOM 操作</li>\n<li>BOM 操作</li>\n<li>事件绑定</li>\n<li>ajax 请求（包括 http 协议）</li>\n<li>储存</li>\n</ul>\n<p><strong>页面弹框 window.alert (123) ，浏览器需要做：</strong></p>\n<ul>\n<li>定义一个 window 全局变量 ，对象类型</li>\n<li>给它定义一个 alert 属性，属性值是一个函数</li>\n</ul>\n<p><strong>获取元素 document.getElementById (id)，浏览器需要做：</strong></p>\n<ul>\n<li>定义一个 document 全局变量 ，对象类型</li>\n<li>给它定义一个 getElementById 属性，属性值是一个函数</li>\n</ul>\n<p><strong>W3C 标准：</strong></p>\n<ul>\n<li>W3C 标准没有规定任何 JS 基础相关的东西</li>\n<li>不管什么变量类型，原型，作用域和异步</li>\n<li>只管 定义用于 浏览器中 JS 操作页面的 API 和 全局变量</li>\n</ul>\n<h4 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结：</h4>\n<p><strong>常说的 JS （浏览器执行的 JS ）包含两部分：</strong></p>\n<ul>\n<li>JS 基础知识：<strong>ECMA 262 标准</strong></li>\n<li>JS-Web-API ：<strong>W3C 标准</strong></li>\n</ul>\n<h2 id=\"5-1-bom-节点操作\"><a class=\"markdownIt-Anchor\" href=\"#5-1-bom-节点操作\">#</a> 5-1 BOM 节点操作</h2>\n<blockquote>\n<p>BOM 操作： <strong>Browser</strong>、<strong>Object</strong>、<strong>Model</strong> （ 浏览器对象模型 ）</p>\n<p><strong>BOM 节点操作</strong> 可以理解为：浏览器把拿到的 html 代码，结构化一个 浏览器 能识别并且 js 可操作的一个模型而已 。</p>\n<p>javacsript 是通过 <strong>访问 BOM</strong> （Browser Object Model）对象来 <strong>访问、控制、修改</strong> 客户端 (浏览器)，由于 BOM 的 window 包含了 document，<strong>window 对象的属性和方法是直接可以使用而且被感知的</strong> ，因此可以直接使用 window 对象的 document 属性，通过 document 属性就可以访问、检索、修改 XHTML 文档内容与结构。因为 document 对象又是 DOM（Document Object Model）模型的根节点。可以说，<strong>BOM 包含了 DOM (对象)</strong> ，浏览器提供出来给予访问的是 BOM 对象，从 BOM 对象再访问到 DOM 对象，从而 js 可以操作浏览器以及浏览器读取到的文档。</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/LLToFChkpany.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"题目\"><a class=\"markdownIt-Anchor\" href=\"#题目\">#</a> 题目</h3>\n<ul>\n<li>如何检测浏览器的类型</li>\n<li>拆解 url 的 各部分</li>\n</ul>\n<h3 id=\"知识点\"><a class=\"markdownIt-Anchor\" href=\"#知识点\">#</a> 知识点</h3>\n<ul>\n<li>navigator</li>\n<li>screen</li>\n<li>location</li>\n<li>history</li>\n</ul>\n<h4 id=\"navigator-screen\"><a class=\"markdownIt-Anchor\" href=\"#navigator-screen\">#</a> navigator &amp; screen</h4>\n<blockquote>\n<p>navigator &amp; screen</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/r3iKL9Xukvhh.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/HGtIQM9isqCI.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"location-history\"><a class=\"markdownIt-Anchor\" href=\"#location-history\">#</a> location &amp; history</h4>\n<blockquote>\n<h6 id=\"location-history-2\"><a class=\"markdownIt-Anchor\" href=\"#location-history-2\">#</a> location &amp; history</h6>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/cbYxCVkoLMQu.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/wBG2i12YtTmW.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"解答\"><a class=\"markdownIt-Anchor\" href=\"#解答\">#</a> 解答</h3>\n<ul>\n<li>如何检测浏览器的类型</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/TfK1lJ7IAry5.png?imageslim\" alt=\"mark\"></p>\n<ul>\n<li>拆解 url 的 各部分</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/UzzCgHl1fImg.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"5-2-dom-节点操作\"><a class=\"markdownIt-Anchor\" href=\"#5-2-dom-节点操作\">#</a> 5-2 DOM 节点操作</h2>\n<blockquote>\n<p><strong>DOM 操作的重点：找到节点对节点（元素 / 文本 / 属性节点）增删改查</strong></p>\n<p><strong>各方法和属性之间的结合操作才会使得 DOM 文档活跃起来</strong></p>\n<p><code>注意方法与属性的不同。</code>  <strong>注意属性的返回值</strong></p>\n<p><strong>注意 javascript 操作样式的可读可写性</strong></p>\n<p><a href=\"https://juejin.im/post/5b16113f5188257d7a49ada7\">可参考</a></p>\n</blockquote>\n<h3 id=\"dom-节点操作\"><a class=\"markdownIt-Anchor\" href=\"#dom-节点操作\">#</a> DOM 节点操作：</h3>\n<ul>\n<li>获取 DOM 节点</li>\n<li>prototype</li>\n<li>Attribute</li>\n</ul>\n<h4 id=\"获取-dom-节点\"><a class=\"markdownIt-Anchor\" href=\"#获取-dom-节点\">#</a> 获取 DOM 节点</h4>\n<blockquote>\n<p>获取 DOM 节点</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementByClassName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classname\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#foo > div.bar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".bar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/TsP71SzkfFU5.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"prototype\"><a class=\"markdownIt-Anchor\" href=\"#prototype\">#</a> prototype</h4>\n<blockquote>\n<p>prototype</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/nehMbgtKQirx.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"property\"><a class=\"markdownIt-Anchor\" href=\"#property\">#</a> property</h4>\n<blockquote>\n<p>property 只是一个 JS 对象的属性的修改</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/3vippb1mnJqF.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"attribute\"><a class=\"markdownIt-Anchor\" href=\"#attribute\">#</a> Attribute</h4>\n<blockquote>\n<p>Attribute</p>\n<p>Attribute 是对 html <strong>标签属性</strong> 的修改 （获取）</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/B7FUAdLGXAHz.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"dom-结构操作\"><a class=\"markdownIt-Anchor\" href=\"#dom-结构操作\">#</a> DOM 结构操作</h3>\n<blockquote>\n<p>DOM 结构操作</p>\n</blockquote>\n<ul>\n<li>新增节点</li>\n<li>获取父元素</li>\n<li>获取子元素</li>\n<li>删除节点</li>\n</ul>\n<h4 id=\"新增节点\"><a class=\"markdownIt-Anchor\" href=\"#新增节点\">#</a> 新增节点</h4>\n<blockquote>\n<p>新增节点</p>\n<p>移动已有 的节点</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n  <span class=\"token keyword\">var</span> div1 <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div1'</span><span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span>\n  p<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;h3>hello world&lt;/h3>'</span> div1<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">var</span> p2 <span class=\"token operator\">=</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.p2'</span><span class=\"token punctuation\">)</span> div1<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div1<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/e7UMDpPFqB1d.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"获取父元素和子元素\"><a class=\"markdownIt-Anchor\" href=\"#获取父元素和子元素\">#</a> 获取父元素和子元素</h4>\n<blockquote>\n<p>获取父元素和子元素</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"div1\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"p1\"</span><span class=\"token operator\">></span><span class=\"token keyword\">this</span> is p1<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"p2\"</span><span class=\"token operator\">></span><span class=\"token keyword\">this</span> is p2<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"div2\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"p3\"</span><span class=\"token operator\">></span><span class=\"token keyword\">this</span> is p3<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"p4\"</span><span class=\"token operator\">></span><span class=\"token keyword\">this</span> is p4<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n    <span class=\"token keyword\">var</span> div1<span class=\"token operator\">=</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div1'</span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div1<span class=\"token punctuation\">.</span>parentElement<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div1<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">)</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div1<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//3</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div1<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeType<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//1</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div1<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//#text</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>div1<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// DIV</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/BD4IQWndiCTW.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"解答-2\"><a class=\"markdownIt-Anchor\" href=\"#解答-2\">#</a> 解答</h4>\n<ul>\n<li>\n<p>DOM 是哪种基本的数据结构</p>\n<ul>\n<li>树</li>\n</ul>\n</li>\n<li>\n<p>DOM 操作的常用 API 有哪些</p>\n<ul>\n<li>获取 DOM 节点，以及节点的 property 和 Attribute</li>\n<li>获取父节点，获取子节点</li>\n<li>新增节点，删除节点</li>\n</ul>\n</li>\n<li>\n<p>DOM 节点的 Attribute 和 property 有何区别</p>\n<ul>\n<li>property 只是一个 JS 对象的属性的修改</li>\n<li>Attribute 是对 html 标签属性的修改</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"重点总结\"><a class=\"markdownIt-Anchor\" href=\"#重点总结\">#</a> 重点总结</h4>\n<ul>\n<li>DOM 本质</li>\n<li>DOM 节点操作</li>\n<li>DOM 结构操作</li>\n</ul>\n<h2 id=\"5-3-事件绑定\"><a class=\"markdownIt-Anchor\" href=\"#5-3-事件绑定\">#</a> 5-3 事件绑定</h2>\n<blockquote>\n<p>JavaScript 绑定事件的三种方式</p>\n</blockquote>\n<h3 id=\"javascript-绑定事件的三种方式\"><a class=\"markdownIt-Anchor\" href=\"#javascript-绑定事件的三种方式\">#</a> JavaScript 绑定事件的三种方式：</h3>\n<ul>\n<li>使用内联</li>\n<li>使用 <code>.onclick</code>  的方式</li>\n<li>使用事件监听 <code>addEventListener</code>  的方式</li>\n</ul>\n<h4 id=\"内联\"><a class=\"markdownIt-Anchor\" href=\"#内联\">#</a> 内联</h4>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>按钮<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>alert(1);<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这种方式就是在一个元素上面直接绑定了一个点击 <code>onclick</code>  事件，此事件为<a href=\"https://link.juejin.im/?target=https%3A%2F%2Fbaike.baidu.com%2Fitem%2FDOM%2F50288%3Ffr%3Daladdin\"> DOM 0 级标准</a>。同时，这个事件的优先级是最高的。</p>\n<h4 id=\"使用对象事件的形式\"><a class=\"markdownIt-Anchor\" href=\"#使用对象事件的形式\">#</a> 使用对象。事件的形式</h4>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"按钮\"</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">></span>\n\t<span class=\"token keyword\">var</span> bt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsBytagname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tbt<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用这种形式也是可以给一个 DOM 元素添加上一个事件。这个也是<a href=\"https://link.juejin.im/?target=https%3A%2F%2Fbaike.baidu.com%2Fitem%2FDOM%2F50288%3Ffr%3Daladdin\"> DOM 0 级标准</a>。</p>\n<h4 id=\"以上的弊端\"><a class=\"markdownIt-Anchor\" href=\"#以上的弊端\">#</a> 以上的弊端</h4>\n<p>以上两种方式都是存在一个弊端的，就是一个元素只能添加一个事件。第一种就不用说了，写在行内就一个属性。至于第二种，有的网友可能会说我可以再写一个，比如：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"按钮\"</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">></span>\n    <span class=\"token keyword\">var</span> bt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    bt<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    bt<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/u7dGQvDbEuTR.gif\" alt=\"mark\"></p>\n<p>写是可以这么写。那么我们先来看一看这个写法的意思，这种写法的本质就是在一个对象上添加一个属性，就上面的例子，就是在 <code>bt</code>  这个对象上添加一个 <code>onclick</code>  属性。那么，如果在之后的代码中也存在 <code>bt.onclcik</code> ，只会吧前面的给覆盖了。所以这样的写法也只能添加一个事件。</p>\n<p>那么，问题来了。我要给一个元素（DOM 对象）添加两个甚至是多个事件，使用什么呢？此时，就需要使用 <code>addEventListener</code>  的方式来添加事件。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"button\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"按钮\"</span><span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">></span>\n\t<span class=\"token keyword\">var</span> bt <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsBytagname</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tbt<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\tbt<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/fH7NDlrt0vLr.gif\" alt=\"mark\"></p>\n<p>上面的方式就可以给一个 DOM 对象绑定一个或者是多个事件。<strong>强烈推荐使用这一种绑定事件的方式</strong>。 使用 <code>addEventListener</code>  的方式还可以拥有第三个参数。 <a href=\"https://www.runoob.com/jsref/met-element-addeventlistener.html\">参看</a></p>\n<p><strong>三个参数</strong> ：</p>\n<ol>\n<li>事件类型，<strong>不需要</strong>添加上 <code>on</code></li>\n<li>事件函数</li>\n<li>是否捕获（布尔值），默认是 <code>false</code> ，即不捕获，那就是冒泡。</li>\n</ol>\n<h3 id=\"捕获和冒泡\"><a class=\"markdownIt-Anchor\" href=\"#捕获和冒泡\">#</a> 捕获和冒泡</h3>\n<h4 id=\"捕获\"><a class=\"markdownIt-Anchor\" href=\"#捕获\">#</a> 捕获</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/VLE5T5uzApOX.png?imageslim\" alt=\"mark\"></p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>a<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  a\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>b<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    b\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>c<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>c<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 捕获</span>\n  a<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b-a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  b<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b-b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  c<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b-c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">//运行结果：点击c时，上面的代码的执行顺序：b-a，b-b，b-c</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"冒泡\"><a class=\"markdownIt-Anchor\" href=\"#冒泡\">#</a> 冒泡</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/eVyMTBdrppfb.png?imageslim\" alt=\"mark\"></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"a\"</span><span class=\"token operator\">></span>\n    a\n    <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"b\"</span><span class=\"token operator\">></span>\n        b\n        <span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"c\"</span><span class=\"token operator\">></span>c<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n \t<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 冒泡</span>\n    a<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m-a\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    b<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m-b\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    c<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m-c\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\">//运行结果：点击c时，上面的代码的执行顺序：m-c，m-b，m-a</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"停止传播\"><a class=\"markdownIt-Anchor\" href=\"#停止传播\">#</a> 停止传播</h4>\n<p>使用 <code>stopPropagation</code>  可以阻止事件的<strong>传播</strong>。不能使用 <code>return false</code>  ，阻止捕获也是一样，添加之后就不会在继续往下传递了。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 阻止冒泡</span>\nc<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m-c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    e<span class=\"token punctuation\">.</span><span class=\"token function\">stopPropagation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 此处阻止传播</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 此时的顺序：b-a,b-c,m-c。不会传递，后面的不会执行了</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"关于使用addeventlistener\"><a class=\"markdownIt-Anchor\" href=\"#关于使用addeventlistener\">#</a> 关于使用 <code>addEventListener</code></h4>\n<p><strong>由于 <code>addEventListener</code>  单词太长：</strong> 所以封装一下：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ele<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  ele<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"关于事件代理委托\"><a class=\"markdownIt-Anchor\" href=\"#关于事件代理委托\">#</a> 关于事件代理（委托）</h4>\n<p>如果你要给每一个 <code>li</code>  标签添加一个点击事件，弹出每一个 <code>li</code>  的索引值</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>list-1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>list-2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>list-3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>list-4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>闭包：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> oLis <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> oLis<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span>oLis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>因为你的 <code>li</code>  的个数可能发生改变，如果是这样的话，可能会出一些问题。</p>\n<p>事件代理代码：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> oBox <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"box\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span>oBox<span class=\"token punctuation\">,</span> <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 判断点击的是li</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>nodeName <span class=\"token operator\">==</span> <span class=\"token string\">\"LI\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这样也是可以的，不过此时的 <code>addEvent</code>  函数点击的时候就需要在 <code>fn</code>  里面判断点击的是哪一个标签。为了更好的使用 <code>addEvent</code> ，我们可以改进一下</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ele<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> selector<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 如果只有三个参数，那么3,4互换</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fn <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fn <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">;</span>\n    selector <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  ele<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">//  代理</span>\n      target <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 不代理</span>\n      <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这时点击 <code>li</code>  弹出 innerHTML 就可以这样实现：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token function\">addEvent</span><span class=\"token punctuation\">(</span>oBox<span class=\"token punctuation\">,</span> <span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"li\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"总结-2\"><a class=\"markdownIt-Anchor\" href=\"#总结-2\">#</a> 总结：</h4>\n<ol>\n<li><strong>同时 存在捕获与冒泡时</strong> ，<strong>捕获的优先级是高于冒泡的</strong> 。</li>\n<li>没有捕获的时候谁在前面先执行谁</li>\n</ol>\n<p>如果要取消一个使用 <code>addEventListener</code>  绑定的事件函数，使用 <code>removeEventListener</code>  可以移除事件。</p>\n<h4 id=\"解答-3\"><a class=\"markdownIt-Anchor\" href=\"#解答-3\">#</a> 解答</h4>\n<ul>\n<li>编写一个通用的事件监听函数</li>\n</ul>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">bindEvent</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">elem<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">,</span> seletor<span class=\"token punctuation\">,</span> fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fn <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    fn <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">;</span>\n    seletor <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  elem<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>seletor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      target <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span>seletor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">fn</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>\n<p>描述事件冒泡的流程</p>\n<ul>\n<li>DOM 树形结构</li>\n<li>事件冒泡</li>\n<li>阻止冒泡</li>\n<li>冒泡的应用</li>\n</ul>\n</li>\n<li>\n<p>对于一个无线下拉加载图片的页面，如何给每个图片绑定事件</p>\n<ul>\n<li>使用代理</li>\n<li>知道代理的两个优点</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"重点总结-2\"><a class=\"markdownIt-Anchor\" href=\"#重点总结-2\">#</a> 重点总结</h4>\n<ul>\n<li>通用事件绑定</li>\n<li>事件冒泡</li>\n<li>代理</li>\n</ul>\n<h2 id=\"5-4-ajax\"><a class=\"markdownIt-Anchor\" href=\"#5-4-ajax\">#</a> 5-4 Ajax</h2>\n<blockquote>\n<p>题目</p>\n<p>知识点</p>\n<p>题目</p>\n</blockquote>\n<h3 id=\"题目-2\"><a class=\"markdownIt-Anchor\" href=\"#题目-2\">#</a> 题目</h3>\n<ul>\n<li>手动编写一个 ajax，不依赖第三方库</li>\n<li>跨域的几种实现方式</li>\n</ul>\n<h3 id=\"知识点-2\"><a class=\"markdownIt-Anchor\" href=\"#知识点-2\">#</a> 知识点</h3>\n<ul>\n<li>XMLHttpRequest</li>\n<li>状态码说明</li>\n<li>跨域</li>\n</ul>\n<h4 id=\"xmlhttprequest\"><a class=\"markdownIt-Anchor\" href=\"#xmlhttprequest\">#</a> XMLHttpRequest</h4>\n<blockquote>\n<p>使用 XMLHttpRequest (XHR) 对象可以与服务器交互。您可以从 URL 获取数据，而无需让整个的页面刷新。这使得 Web 页面可以只更新页面的局部，而不影响用户的操作。XMLHttpRequest 在 <a href=\"https://developer.mozilla.org/en-US/docs/AJAX\">Ajax</a> 编程中被大量使用</p>\n<p>尽管名称如此，XMLHttpRequest 可以用于获取任何类型的数据，而不仅仅是 XML，它还支持 <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP\">HTTP</a> 以外的协议 (包括文件和 ftp)。</p>\n<p>如果您的通信需要从服务器接收事件或消息数据，请考虑通过<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/EventSource\"> <code>EventSource</code> </a> 接口使用 <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events\">server-sent events</a>。对于 full-duplex 通信， <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\">WebSockets</a> 可能是更好的选择。</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest\">可参考</a></p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> xhr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/api\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false 使用异步</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//这里是函数异步执行，可参考之前 JS 基础中的异步 模块</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>readyState <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>xhr<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\nxhr<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"ie-兼容性问题\"><a class=\"markdownIt-Anchor\" href=\"#ie-兼容性问题\">#</a> IE 兼容性问题</h4>\n<blockquote>\n<p><a href=\"https://www.w3cschool.cn/mlb2er/3miu1pxk.html\">有意向者可参考</a></p>\n</blockquote>\n<ul>\n<li>IE 低版本使用 ActiveXObject，和 W3C 标准不一样</li>\n<li>IE 低版本使用量非常少，很多网站都早已不支持</li>\n<li>建议对 IE 低版本的兼容性：<strong>了解即可，无需深究</strong> 。</li>\n<li>如果遇到对 IE 低版本要求苛刻的面试，果断放弃</li>\n</ul>\n<h4 id=\"readystate-状态码说明\"><a class=\"markdownIt-Anchor\" href=\"#readystate-状态码说明\">#</a> readyState 状态码说明</h4>\n<blockquote>\n<p>readyState 是 XMLHttpRequest 对象的一个属性，用来标识当前 XMLHttpRequest 对象处于什么状态。<br>\nreadyState 总共有 5 个状态值，分别为 0~4，每个值代表了不同的含义</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token number\">0</span>：未初始化，还没有调用 <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法\n<span class=\"token number\">1</span><span class=\"token function\">：载入，已调用send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法，XMLHttpRequest对象开始发送请求\n<span class=\"token number\">2</span><span class=\"token function\">：载入完成，send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>方法执行完成，已经接收到全部的相应内容\n<span class=\"token number\">3</span>：交互，正在解析响应内容\n<span class=\"token number\">4</span>：完成，响应内容解析完成，可以在客户端调用了<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"status-状态码说明\"><a class=\"markdownIt-Anchor\" href=\"#status-状态码说明\">#</a> status 状态码说明</h4>\n<blockquote>\n<p>status 是 XMLHttpRequest 对象的一个属性，表示响应的 HTTP 状态码</p>\n<p><a href=\"https://www.cnblogs.com/liu-fei-fei/p/5618782.html\">详细参考</a></p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token number\">1</span>xx：信息响应类，表示接收到请求并且继续处理\n<span class=\"token number\">2</span>xx：处理成功响应类，表示动作被成功接收、理解和接受\n<span class=\"token number\">3</span>xx：重定向响应类，为了完成指定的动作，必须接受进一步处理\n<span class=\"token number\">4</span>xx：客户端错误，客户请求包含语法错误或者是不能正确执行\n<span class=\"token number\">5</span>xx：服务端错误，服务器不能正确执行一个正确的请求\n\n<span class=\"token number\">200</span>——交易成功\n<span class=\"token number\">404</span>——没有发现文件、查询或URl\n<span class=\"token operator\">...</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"5-5-跨域\"><a class=\"markdownIt-Anchor\" href=\"#5-5-跨域\">#</a> 5-5 跨域</h2>\n<blockquote>\n<p><strong>定义</strong> ：跨域是指从一个域名的网页去请求另一个域名的资源。<a href=\"http://xn--www-8p9d920c8x0a.baidu.com\">比如从 www.baidu.com</a> 页面去请求 <a href=\"http://www.google.com\">www.google.com</a> 的资源。但是一般情况下不能这么做，它是由浏览器的同源策略造成的，是浏览器对<a href=\"https://link.juejin.im?target=http%3A%2F%2Flib.csdn.net%2Fbase%2Fjavascript\"> JavaScript</a> 施加的安全限制。跨域的严格一点的定义是：只要 协议，域名，端口有任何一个的不同，就被当作是跨域</p>\n<p>** 所谓同源是指，域名，协议，端口均相同。** 这里说的 js 跨域是指通过 js 在不同的域之间进行数据传输或通信，比如用 ajax 向一个不同的域请求数据，或者通过 js 获取页面中不同域的框架中 (iframe) 的数据。</p>\n<p>概念：<strong>只要协议、域名、端口有任何一个不同</strong> ，都被当作是不同的域。算作 跨域。</p>\n<p><a href=\"https://segmentfault.com/a/1190000015597029\">参考</a></p>\n<p>http 默认端口：80</p>\n<p>https 默认端口：443</p>\n</blockquote>\n<h3 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h3>\n<ul>\n<li>说明什么是跨域</li>\n<li>JSONP</li>\n<li>服务器端设置 http header</li>\n</ul>\n<h4 id=\"什么是跨域\"><a class=\"markdownIt-Anchor\" href=\"#什么是跨域\">#</a> 什么是跨域</h4>\n<p><strong>跨域是</strong>指一个<strong>域</strong>下的文档或脚本试图去请求另一个<strong>域</strong>下的资源，这里<strong>跨域是</strong>广义的。 其实我们通常所说的<strong>跨域是</strong>狭义的，<strong>是</strong>由浏览器同源策略限制的一类请求场景。</p>\n<h4 id=\"可以跨域的三个标签\"><a class=\"markdownIt-Anchor\" href=\"#可以跨域的三个标签\">#</a> 可以跨域的三个标签</h4>\n<ul>\n<li>&lt;<strong>img src=xxx</strong> &gt; 用于打点统计，统计网站可能是其它域</li>\n<li>&lt;<strong>link href=xxxx</strong> &gt; 可以使用 CDN,CDN 也是其它域</li>\n<li>&lt;<strong>script src=xxx</strong> &gt; 可以使用 CDN, 可以用于 <strong>JSONP</strong></li>\n</ul>\n<h4 id=\"跨域注意事项\"><a class=\"markdownIt-Anchor\" href=\"#跨域注意事项\">#</a> 跨域注意事项</h4>\n<ul>\n<li>所有的跨域请求都必须经过信息提供方允许</li>\n<li>如果未经允许即可获取，那是浏览器同源策略出现漏洞</li>\n</ul>\n<h3 id=\"jsonp-实现原理\"><a class=\"markdownIt-Anchor\" href=\"#jsonp-实现原理\">#</a> JSONP 实现原理</h3>\n<blockquote>\n<p>jsonp 是一种跨域通信的手段</p>\n<p><a href=\"https://segmentfault.com/a/1190000007665361\">参考 1</a> <a href=\"https://github.com/qianlongo/zepto-analysis/issues/4\">参考 2</a></p>\n</blockquote>\n<p><strong>jsonp 是一种跨域通信的手段，它的原理其实很简单：</strong></p>\n<ol>\n<li>客户端利用 <code>script</code>  标签可以跨域请求资源的性质，向网页中动态插入 <code>script</code>  标签，来向服务端请求数据。</li>\n<li>服务端会解析请求的 <code>url</code> , 至少拿到一个回调函数 (比如 <code>callback=myCallback</code> ) 参数，之后将数据放入其中返回给客户端。</li>\n<li>当然 jsonp 不同于平常的 <code>ajax</code>  请求，它仅仅支持 get 类型的方式</li>\n</ol>\n<h4 id=\"实现流程\"><a class=\"markdownIt-Anchor\" href=\"#实现流程\">#</a> 实现流程</h4>\n<ol>\n<li>\n<p>设定一个 script 标签</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"http://jsonp.js?callback=xxx\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>\n<p>callback 定义了一个函数名，而远程服务端通过调用指定的函数并传入参数来实现传递参数，将 <code>fn(response)</code>  传递回客户端</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$callback</span> <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'callback'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'callback'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token single-quoted-string string\">'callback'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$callback</span><span class=\"token punctuation\">.</span><span class=\"token single-quoted-string string\">'(.json_encode($data).)'</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n</li>\n<li>\n<p>客户端接收到返回的 js 脚本，开始解析和执行 <code>fn(response)</code></p>\n</li>\n</ol>\n<h4 id=\"服务端设置-http-header\"><a class=\"markdownIt-Anchor\" href=\"#服务端设置-http-header\">#</a> 服务端设置 http header</h4>\n<ul>\n<li>另外一个解决跨域的简洁方法，需要服务器端来做</li>\n<li>但是作为交互方，我们必须知道这个方法</li>\n<li>是将来解决跨域问题的一个趋势</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190718/YNGAeXPTUx6I.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"重点总结-3\"><a class=\"markdownIt-Anchor\" href=\"#重点总结-3\">#</a> 重点总结</h4>\n<ul>\n<li>XMLHttpRequest</li>\n<li>状态码说明</li>\n<li>跨域</li>\n</ul>\n<h2 id=\"5-6-存储\"><a class=\"markdownIt-Anchor\" href=\"#5-6-存储\">#</a> 5-6 存储</h2>\n<blockquote>\n<p>题目</p>\n<p>知识点</p>\n<p>解答</p>\n</blockquote>\n<h3 id=\"题目-3\"><a class=\"markdownIt-Anchor\" href=\"#题目-3\">#</a> 题目</h3>\n<ul>\n<li>请描述一下 cookie，sessionStorage 和 localStorage 的区别？</li>\n</ul>\n<h3 id=\"知识点-3\"><a class=\"markdownIt-Anchor\" href=\"#知识点-3\">#</a> 知识点</h3>\n<ul>\n<li>cookie</li>\n<li>sessionStorage 和 localStorage</li>\n</ul>\n<h4 id=\"cookie\"><a class=\"markdownIt-Anchor\" href=\"#cookie\">#</a> cookie</h4>\n<blockquote>\n<p><a href=\"https://juejin.im/post/5b57dba3f265da0fb018741f\">可参考</a></p>\n</blockquote>\n<ul>\n<li>本身用于客户端和服务器端通信</li>\n<li>但是它有本地储存的功能，于是就被 <strong>借用</strong></li>\n<li>使用 document.cookie = … 获取和修改即可</li>\n</ul>\n<h4 id=\"cookie-用于储存的缺点\"><a class=\"markdownIt-Anchor\" href=\"#cookie-用于储存的缺点\">#</a> cookie 用于储存的缺点</h4>\n<ul>\n<li>\n<p><strong>储存量太小</strong> ，Cookie` 数量和长度的限制。每个 domain 最多只能有 20 条 cookie，每个 cookie 长度不能超过 4KB，否则会被截掉。在当今新的浏览器和客户端设备版本中，支持 8192 字节的 Cookie 大小已愈发常见。</p>\n</li>\n<li>\n<p>所有 http 请求都带着，会<strong>影响获取资源的效率</strong></p>\n</li>\n<li>\n<p>用户配置为禁用。有些用户禁用了浏览器或客户端设备接收 Cookie 的能力，因此限制了这一功能</p>\n</li>\n<li>\n<p>由于在 HTTP 请求中的 cookie 是明文传递的，潜在的安全风险，Cookie 可能会被篡改</p>\n</li>\n<li>\n<p>有些状态不可能保存在客户端</p>\n</li>\n<li>\n<p>cookie 会被附加在每个 HTTP 请求中，所以无形中增加了流量</p>\n</li>\n<li>\n<p>cookie 一般不可跨域使用</p>\n</li>\n<li>\n<p>没有封装好的 setCookie 和 getCookie 方法，需要开发者自省封装</p>\n</li>\n</ul>\n<h3 id=\"sessionstorage-和-localstorage\"><a class=\"markdownIt-Anchor\" href=\"#sessionstorage-和-localstorage\">#</a> sessionStorage 和 localStorage</h3>\n<ul>\n<li>HTML5 专门为储存而设计，最大容量 5M</li>\n<li>API 简答易用</li>\n<li>localStorage.setItem(key, value); localStorage.getItem(key, value);</li>\n</ul>\n<h4 id=\"区别\"><a class=\"markdownIt-Anchor\" href=\"#区别\">#</a> 区别：</h4>\n<p><strong>localStorage</strong> 生命周期是永久，这意味着除非用户显示在浏览器提供的 UI 上清除 localStorage 信息，否则这些信息将永远存在。</p>\n<p><strong>sessionStorage</strong> 生命周期为当前窗口或标签页，一旦窗口或标签页被永久关闭了，那么所有通过 sessionStorage 存储的数据也就被清空了。</p>\n<p>不同浏览器无法共享 localStorage 或 sessionStorage 中的信息。相同浏览器的不同页面间可以共享相同的 localStorage（页面属于相同域名和端口），但是不同页面或标签页间无法共享 sessionStorage 的信息。这里需要注意的是，页面及标 签页仅指顶级窗口，如果一个标签页包含多个 iframe 标签且他们属于同源页面，那么他们之间是可以共享 sessionStorage 的。</p>\n<h4 id=\"注意\"><a class=\"markdownIt-Anchor\" href=\"#注意\">#</a> 注意</h4>\n<ul>\n<li>iOS safari 隐藏模式下</li>\n<li>localStorage.getItem 会报错</li>\n<li>建议 统一使用 try-catch 封装</li>\n</ul>\n<h3 id=\"解答-4\"><a class=\"markdownIt-Anchor\" href=\"#解答-4\">#</a> 解答</h3>\n<ul>\n<li>请描述一下 cookie，sessionStorage 和 localStorage 的区别？\n<ul>\n<li>容量</li>\n<li>是否携带到 ajax 中</li>\n<li>API 易用性</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "DOM",
                "BOM",
                "事件绑定",
                "ajax 请求",
                "储存"
            ]
        }
    ]
}