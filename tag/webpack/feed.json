{
    "version": "https://jsonfeed.org/version/1",
    "title": "sunflower • All posts by \"webpack\" tag",
    "description": "周琛的博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2019/08/04/ES6intro/",
            "url": "http://example.com/2019/08/04/ES6intro/",
            "title": "ES6 语法",
            "date_published": "2019-08-04T08:46:35.000Z",
            "content_html": "<h1 id=\"es6-语法\"><a class=\"markdownIt-Anchor\" href=\"#es6-语法\">#</a> ES6 语法</h1>\n<blockquote>\n<p>本章主要讲解工作中最常用的 ES6 语法，包括 <strong>Module Class Promise</strong> 等语法，还会介绍使用 <strong>babel webpack rollup</strong> 来搭建 ES6 编译环境。</p>\n<p><a href=\"http://es6.ruanyifeng.com/\">ECMAScript 6 入门</a></p>\n</blockquote>\n<h2 id=\"es6-使用\"><a class=\"markdownIt-Anchor\" href=\"#es6-使用\">#</a> ES6 使用</h2>\n<ul>\n<li>开发环境已经普及使用</li>\n<li>浏览器环境却支持不好（ 需要开发环境编译 ）</li>\n<li>内容很多，重点了解常用语法</li>\n<li>面试：开发环境的使用 + 重点语法的掌握</li>\n</ul>\n<h3 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h3>\n<ul>\n<li>ES6 模块化如何使用，开发环境如何打包</li>\n<li>Class 和 普通构造函数 有何区别 ？</li>\n<li>Promise 的基本使用和原理</li>\n<li>总结一下 ES6 其它常用功能</li>\n</ul>\n<h2 id=\"2-1-es6-模块化语法\"><a class=\"markdownIt-Anchor\" href=\"#2-1-es6-模块化语法\">#</a> 2-1 ES6 模块化语法</h2>\n<blockquote>\n<p>ES6 模块化如何使用，开发环境如何打包</p>\n</blockquote>\n<h3 id=\"知识点\"><a class=\"markdownIt-Anchor\" href=\"#知识点\">#</a> 知识点</h3>\n<p><strong>ES6 模块化如何使用，开发环境如何打包:</strong></p>\n<ul>\n<li>模块化的基本语法</li>\n<li>开发环境的配置</li>\n<li>关于 JS 众多 模块化标准</li>\n</ul>\n<h4 id=\"export-语法\"><a class=\"markdownIt-Anchor\" href=\"#export-语法\">#</a> export 语法</h4>\n<blockquote>\n<p>export 语法</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">/*util1.js*/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*util2.js*/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fn1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fn2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/*index.js*/</span>\n<span class=\"token keyword\">import</span> util1 <span class=\"token keyword\">from</span> <span class=\"token string\">\"./util1.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> fn1<span class=\"token punctuation\">,</span> fn2 <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./util2.js\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>util1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"开发环境-babel\"><a class=\"markdownIt-Anchor\" href=\"#开发环境-babel\">#</a> 开发环境 - babel</h4>\n<blockquote>\n<p>Babel 是一个 JavaScript 编译器。<a href=\"https://babeljs.io/\">官网</a></p>\n<p>使用技巧 可参考 <a href=\"http://zxinc520.com/lcj/%225cc4640d9b3032095d9e5754%22\">React 学习第一天 ：webpack 中使用 Babel 配置</a></p>\n<p>和 <a href=\"http://zxinc520.com/lcj/%225cb72a04009ae94788aa0d7f%22\">Vue 第六天学习 ：webpack 中 babel 的配置</a></p>\n</blockquote>\n<h4 id=\"开发环境-webpack\"><a class=\"markdownIt-Anchor\" href=\"#开发环境-webpack\">#</a> 开发环境 - webpack</h4>\n<blockquote>\n<p>开发环境 - webpack - <em>webpack</em> 是一个模块打包器 <a href=\"https://webpack.js.org/\">官网</a></p>\n<p>详情 可参考我的博客：<a href=\"http://zxinc520.com/lcj/%225cb181596d3d4a5cb52b65c9%22\">Vue 第五天：webpack</a> 和 <a href=\"http://zxinc520.com/lcj/%225cb72a04009ae94788aa0d7f%22\">Vue 第六天学习：深入 webpack</a> 以及 <a href=\"http://zxinc520.com/lcj/%225cc4640d9b3032095d9e5754%22\">React 学习第一天：创建基本的 webpack4.x 项目 </a></p>\n</blockquote>\n<h4 id=\"rollupjs\"><a class=\"markdownIt-Anchor\" href=\"#rollupjs\">#</a> rollup.js</h4>\n<blockquote>\n<p>概述 (Overview) <a href=\"https://www.rollupjs.com/guide/zh\">中文文档</a> <a href=\"https://rollupjs.org/guide/en/\">官网</a></p>\n<p>Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。Rollup 对代码模块使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。ES6 模块可以使你自由、无缝地使用你最喜爱的 library 中那些最有用独立函数，而你的项目不必携带其他未使用的代码。ES6 模块最终还是要由浏览器原生实现，但当前 Rollup 可以使你提前体验</p>\n<p><strong>rollup 功能单一（极致） ，webpack 功能强大</strong></p>\n</blockquote>\n<h4 id=\"关于-js-众多-模块化标准\"><a class=\"markdownIt-Anchor\" href=\"#关于-js-众多-模块化标准\">#</a> 关于 JS 众多 模块化标准</h4>\n<blockquote>\n<p>关于 JS 众多 模块化标准</p>\n<p>详情可参考我的博客：<a href=\"http://zxinc520.com/lcj/%225d31940b724e8113740499b3%22\">开发环境： 模块化</a></p>\n</blockquote>\n<p><strong>发展过程</strong></p>\n<ul>\n<li>没有模块化</li>\n<li>AMD 成为 标准，require.js （也有 CMD【<strong>用的不多</strong> 】）</li>\n<li>前端打包工具，nodejs 模块化可以被使用</li>\n<li>ES6 出现 ，想统一现在所有的模块化标准</li>\n<li>nodejs 积极支持，浏览器尚未统一</li>\n<li>你可以自造 lib，但是不要自造标准</li>\n</ul>\n<h3 id=\"问题解答\"><a class=\"markdownIt-Anchor\" href=\"#问题解答\">#</a> 问题解答</h3>\n<ul>\n<li>语法：import export （注意有无 default）</li>\n<li>环境：babel 编译 ES6 语法，模块化可用 webpack 和 rollup</li>\n<li>扩展：说一下自己对模块化标准统一的期待</li>\n</ul>\n<h2 id=\"2-2-class-和-普通构造函数有何区别\"><a class=\"markdownIt-Anchor\" href=\"#2-2-class-和-普通构造函数有何区别\">#</a> 2-2 Class 和 普通构造函数有何区别</h2>\n<blockquote>\n<p>Class 和 普通构造函数有何区别</p>\n<p><a href=\"http://zxinc520.com/lcj/%225cd03896bd482e21ac46a9d4%22\">我的博客：React 学习第二天：了解 class</a></p>\n</blockquote>\n<h3 id=\"知识点-2\"><a class=\"markdownIt-Anchor\" href=\"#知识点-2\">#</a> 知识点</h3>\n<ul>\n<li>JS 构造函数</li>\n<li>Class 基本语法</li>\n<li>语法糖</li>\n<li>继承</li>\n</ul>\n<h3 id=\"问题解答-2\"><a class=\"markdownIt-Anchor\" href=\"#问题解答-2\">#</a> 问题解答</h3>\n<ul>\n<li>Class 和 普通构造函数 有何区别 ？\n<ul>\n<li>Class 在语法上更加贴合面向对象的写法</li>\n<li>Class 实现继承更加易读、易理解</li>\n<li>更易于写 java 等后端语言的使用</li>\n<li>本质还是语法糖， 使用 prototype</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-3-promise-的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#2-3-promise-的基本使用\">#</a> 2-3 Promise 的基本使用</h2>\n<h3 id=\"promise-的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#promise-的基本使用\">#</a> Promise 的基本使用</h3>\n<blockquote>\n<p>可参考我的博客：<a href=\"http://zxinc520.com/lcj/%225cbb3bf05733fa0a66088c80%22\">Promise 详细分析</a></p>\n</blockquote>\n<ul>\n<li>Callback Hell</li>\n<li>Promise 语法</li>\n</ul>\n<h4 id=\"callback-hell\"><a class=\"markdownIt-Anchor\" href=\"#callback-hell\">#</a> Callback Hell</h4>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">src<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> fail</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span>\n  <span class=\"token string\">\"https://edu-image.nosdn.127.net/B34DC36428D2D51B8EF5EE2C83CE9BF2.png?imageView&amp;thumbnail=241y34&amp;quality=100\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span>\n  src<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"promise-语法\"><a class=\"markdownIt-Anchor\" href=\"#promise-语法\">#</a> Promise 语法</h4>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">src</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> promise<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span>\n  <span class=\"token string\">\"https://edu-image.nosdn.127.net/B34DC36428D2D51B8EF5EE2C83CE9BF2.png?imageView&amp;thumbnail=241y34&amp;quality=100\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresult<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"faild\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresult<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"问题解答-3\"><a class=\"markdownIt-Anchor\" href=\"#问题解答-3\">#</a> 问题解答</h3>\n<ul>\n<li>Promise 的基本使用和原理？\n<ul>\n<li>new Promise 实例，而且要 return</li>\n<li>new Promise 时要传入函数，函数有 resolve, reject 两个参数</li>\n<li>成功时执行 resolve () 失败时执行 reject ()</li>\n<li>then 监听结果</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-4-总结一下-es6-其它常用功能\"><a class=\"markdownIt-Anchor\" href=\"#2-4-总结一下-es6-其它常用功能\">#</a> 2-4 总结一下 ES6 其它常用功能</h2>\n<h3 id=\"知识点-3\"><a class=\"markdownIt-Anchor\" href=\"#知识点-3\">#</a> 知识点</h3>\n<ul>\n<li>let/const</li>\n<li>多行字符串 / 模板变量</li>\n<li>解构赋值</li>\n<li>块级作用域</li>\n<li>函数默认参数</li>\n<li>箭头函数</li>\n</ul>\n<h4 id=\"letconst\"><a class=\"markdownIt-Anchor\" href=\"#letconst\">#</a> let/const</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/IjRCPysI3ja5.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"多行字符串模板变量\"><a class=\"markdownIt-Anchor\" href=\"#多行字符串模板变量\">#</a> 多行字符串 / 模板变量</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/cmkreCVTvB3f.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"解构赋值\"><a class=\"markdownIt-Anchor\" href=\"#解构赋值\">#</a> 解构赋值</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/tkv3jll7XPJG.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"块级作用域\"><a class=\"markdownIt-Anchor\" href=\"#块级作用域\">#</a> 块级作用域</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/vqFw5Cyt1Okg.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"函数默认参数\"><a class=\"markdownIt-Anchor\" href=\"#函数默认参数\">#</a> 函数默认参数</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/rDHBLwq6djzQ.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"箭头函数\"><a class=\"markdownIt-Anchor\" href=\"#箭头函数\">#</a> 箭头函数</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/26aXyJj3eE8M.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/XppPYlgRUceY.png?imageslim\" alt=\"mark\"></p>\n",
            "tags": [
                "ES6 模块化语法",
                "babel",
                "webpack",
                "rollup",
                "ES6"
            ]
        },
        {
            "id": "http://example.com/2019/04/17/VueLearn06/",
            "url": "http://example.com/2019/04/17/VueLearn06/",
            "title": "webpack、webpack 后续问题",
            "date_published": "2019-04-17T13:28:36.000Z",
            "content_html": "<h1 id=\"vue-第六天学习\"><a class=\"markdownIt-Anchor\" href=\"#vue-第六天学习\">#</a> Vue 第六天学习</h1>\n<blockquote>\n<p>file-loader（解决 webpack 打包图片路径问题，字体路径问题）</p>\n<p>webpack 中 babel 的配置（处理高级的 es6 语法或者 es7 语法）</p>\n<p>Vue 中的 render 函数</p>\n<p>在 webpack 构建的项目中，使用 Vue 进行开发</p>\n<p>export default 和 export 的使用方式</p>\n<p>结合 webpack 使用 vue-router</p>\n<p>组件中 style 标签 lang 属性和 scoped 属性的介绍</p>\n<p>抽离路由模块</p>\n<p>一个人如果不想输，就要不断学好眼前的东西，它们将来都会大有用处…</p>\n</blockquote>\n<h2 id=\"webpack-后续问题\"><a class=\"markdownIt-Anchor\" href=\"#webpack-后续问题\">#</a> webpack 后续问题</h2>\n<h5 id=\"问题webpack-打包图片路径问题\"><a class=\"markdownIt-Anchor\" href=\"#问题webpack-打包图片路径问题\">#</a> 问题：Webpack 打包图片路径问题</h5>\n<p><img src=\"http://static.zxinc520.com/blog/20190415/EHGtOouC7m7W.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190415/67j7Iq3tsM4q.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"在页面中引入图片有两种方式\"><a class=\"markdownIt-Anchor\" href=\"#在页面中引入图片有两种方式\">#</a> 在页面中引入图片有两种方式</h4>\n<ul>\n<li>img 标签引入</li>\n<li>css 引入</li>\n</ul>\n<h2 id=\"解决方案webpack-使用-file-loader-处理图片\"><a class=\"markdownIt-Anchor\" href=\"#解决方案webpack-使用-file-loader-处理图片\">#</a> 解决方案：Webpack 使用 file-loader 处理图片</h2>\n<h3 id=\"安装file-loader-包\"><a class=\"markdownIt-Anchor\" href=\"#安装file-loader-包\">#</a> 安装：<strong>file-loader</strong> 包</h3>\n<ol>\n<li>运行  <code>npm i url-loader file-loader -D</code>  来安装 <strong>file-loader</strong> 包</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190415/tFYCSVQRUkQu.png?imageslim\" alt=\"mark\"></p>\n<p>​</p>\n<ol start=\"2\">\n<li>配置 webpack.config.js 文件</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190415/cELvBLsveIEX.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"3\">\n<li>运行 <code> npm run dev</code></li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190415/VVGGMT2828JL.gif\" alt=\"mark\"></p>\n<h3 id=\"file-loader-参数\"><a class=\"markdownIt-Anchor\" href=\"#file-loader-参数\">#</a> file-loader 参数</h3>\n<ul>\n<li>\n<p><code>limit</code>  给定的值，是图片的大小，单位是 byte，如果我们引用的 图片，<strong>大于 <strong>给定的值，则会被转为</strong> base64 格式</strong> 的字符串，如果，图片 ** 小于或等于 ** 给定的 limit 值，则不会被转为 base64 的 字符串<br>\n<img src=\"http://static.zxinc520.com/blog/20190416/XiEHyP6vdL8s.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/T1MukN0guNf5.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/FPE7T3OUKGxd.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li>\n<p><code>name</code>  属性 使图片路径 url 不变</p>\n</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/wX5GMiFDX3zF.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/9qKydj98tyeA.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"处理字体文件-路径问题\"><a class=\"markdownIt-Anchor\" href=\"#处理字体文件-路径问题\">#</a> 处理字体文件 路径问题</h2>\n<blockquote>\n<p>使用 <strong>file-loader</strong></p>\n</blockquote>\n<p>问题描述：引入 bootstrap 字体图标库，但报错！</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/1tjFUEn3NBee.png?imageslim\" alt=\"mark\"></p>\n<p><strong>解决方案</strong>：</p>\n<ol>\n<li>配置 webpack.config.js</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>test<span class=\"token operator\">:</span><span class=\"token regex\">/\\.(ttf|eot|svg|woff|woff2)$/</span><span class=\"token punctuation\">,</span>use<span class=\"token operator\">:</span><span class=\"token string\">'url-loader'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//这是 处理 字体文件的 loader</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/K7a1le382DJs.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"2\">\n<li>运行  <code>npm run dev</code></li>\n</ol>\n<h1 id=\"webpack-中-babel-的配置\"><a class=\"markdownIt-Anchor\" href=\"#webpack-中-babel-的配置\">#</a> webpack 中 babel 的配置</h1>\n<p><a href=\"https://www.babeljs.cn/docs/index.html\">babel 介绍 </a></p>\n<p><strong>问题描述</strong>：</p>\n<ol>\n<li>webpack 中默认只能处理一部分 es6 语法，一些更高级的 es6 语法或者 es7 语法 webpack 处理不了，这时候就需要借助第三方 loader 帮助 webpack 处理这些语法</li>\n<li>class 是 es6 中提供的语法，是用来实现 es6 中面向对象编程的方式，class 和 static 与 Java 中类似</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/4zFaWW0Qqco2.png?imageslim\" alt=\"mark\"></p>\n<p><strong>解决方案</strong>：</p>\n<ol>\n<li>通过 <strong>babel</strong> 可以将高级语法转化为低级语法</li>\n<li>安装，运行两个命令，安装两套包，去安装 babel 相关的功能</li>\n</ol>\n<ul>\n<li><strong>第一套包</strong>： <code>npm i babel-core babel-loader babel-plugin-transform-runtime -D</code></li>\n<li><strong>第二套包</strong>： <code>npm i babel-preset-env babel-preset-stage-0 -D</code></li>\n</ul>\n<ol start=\"3\">\n<li>打开 webpack 配置文件，在 module 节点写的 rules 数组中添加一个新的匹配规则</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>test<span class=\"token operator\">:</span><span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>use<span class=\"token operator\">:</span><span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>exclude<span class=\"token operator\">:</span><span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/T3zLwVwLDPgf.png?imageslim\" alt=\"mark\"></p>\n<!--在配置babel的loader规则时必须把node_module目录通过exclude排除-->\n<p><strong>排除 node_module 目录的原因:</strong></p>\n<ul>\n<li>如果排除 node_module，babel 会把 node_module 目录下的所有第三方 js 文件都打包编译，这会非常消耗 CPU，同时打包速度非常慢</li>\n<li>babel 把 node_module 中的 js 文件转化完毕项目也无法正常运行</li>\n</ul>\n<ol start=\"4\">\n<li>在项目的根目录中新建一个叫做 <strong>.babelrc</strong> 的 babel 配置文件，这个配置文件属于 <strong>json 格式</strong></li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"presets\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"env\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"stage-0\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"plugins\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"transform-runtime\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/Mddz8O6ipjPl.png?imageslim\" alt=\"mark\"></p>\n<p><strong>报错：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/6PopTItC2OrO.png?imageslim\" alt=\"mark\"></p>\n<p>** 解决方案：** 执行  <code>npm i babel-loader@7</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/HJupUdf1JIBA.png?imageslim\" alt=\"mark\"></p>\n<p><strong>报错：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/dYb1bw19ID0Y.png?imageslim\" alt=\"mark\"></p>\n<p><strong>啊啊啊啊～～崩溃！！</strong></p>\n<h2 id=\"修改之后还是跑不起来-醉了\"><a class=\"markdownIt-Anchor\" href=\"#修改之后还是跑不起来-醉了\">#</a> 修改之后还是跑不起来 ---- 醉了！！</h2>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/dK1vXd5NuoO4.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/sEpb3GoWOHIM.png?imageslim\" alt=\"mark\"></p>\n<p><strong>报错：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190416/vh340CYSUk0d.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"升级总结来自百度\"><a class=\"markdownIt-Anchor\" href=\"#升级总结来自百度\">#</a> 升级总结（<a href=\"https://segmentfault.com/a/1190000016458913\">来自百度</a>）</h2>\n<h4 id=\"-babel-升级-7x-踩坑记录\"><a class=\"markdownIt-Anchor\" href=\"#-babel-升级-7x-踩坑记录\">#</a> -babel 升级 7.X 踩坑记录</h4>\n<ol>\n<li>babel 包名改变，以前安装是  <code>npm i babel-*</code>  现在安装 babel 系列需要写成  <code>npm i @babel/*</code></li>\n<li><code>.babelrc</code>  文件写法改变， <code>preset plugins</code>  等全部写成  <code>@babel/*</code>  的形式</li>\n</ol>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">npm:\n- babel-preset-env\n+ @babel&#x2F;preset-env\n- babel-preset-react\n+ @babel&#x2F;preset-react\n- babel-preset-stage-0\n\n.babelrc:\n- &quot;presets&quot;: [&quot;react&quot;, &quot;env&quot;, &quot;stage-0&quot;, &quot;mobx&quot;]\n+ &quot;presets&quot;: [&quot;@babel&#x2F;preset-react&quot;, &quot;@babel&#x2F;preset-env&quot;, &quot;mobx&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>除了上述的 <code>preset</code> ，我还用了 <code>babel-preset-mobx</code> <br>\n 但是没找到  <code>@babel/preset-mobx</code> ，从<a href=\"https://github.com/zwhitchcox/babel-preset-mobx/commits/master\"> babel-preset-mobx git 提交日志</a>上看，作者已经支持了最新的 <code>babel</code> 。在之后的测试中，发现 <code>mobx</code>  的功能也能正常使用。<br>\n另外，<a href=\"https://babeljs.io/blog/2018/07/27/removing-babels-stage-presets\">stage-* 已弃用</a></p>\n<h2 id=\"使用-vue-实例的-render-方法\"><a class=\"markdownIt-Anchor\" href=\"#使用-vue-实例的-render-方法\">#</a> 使用 Vue 实例的 render 方法</h2>\n<blockquote>\n<p>Vue 推荐使用在绝大多数情况下使用 template 来创建你的 HTML。然而在一些场景中，你真的需要 JavaScript 的完全编程的能力，这就是 <strong>render 函数</strong>，它比 template 更接近编译器。</p>\n</blockquote>\n<p>* 基本使用 **</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> login <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;h1>login 组件&lt;/h1>\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">createElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span>login<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/El6GtYoXY4Wm.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"在-webpack-构建的项目中使用-vue-进行开发\"><a class=\"markdownIt-Anchor\" href=\"#在-webpack-构建的项目中使用-vue-进行开发\">#</a> 在 webpack 构建的项目中，使用 Vue 进行开发</h2>\n<ul>\n<li>在普通网页中如何使用 Vue\n<ul>\n<li>1. 使用 script 标签，引入 Vue 的包</li>\n<li>2. 在 index 页面中，创建 一个 id 为 app div 容器</li>\n<li>3. 通过 new Vue 得到一个 vm 的实例</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"重点在-webpack-中-尝试-使用-vue\"><a class=\"markdownIt-Anchor\" href=\"#重点在-webpack-中-尝试-使用-vue\">#</a> 重点：在 webpack 中 尝试 使用 Vue</h2>\n<ol>\n<li><strong>直接导入 Vue 包</strong>：</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/fl74cG8ej4BE.png?imageslim\" alt=\"mark\"></p>\n<p><strong>结果报错</strong>：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/wte2gIV3SL5L.png?imageslim\" alt=\"mark\"></p>\n<!--注意：在webpack 中 使用 `import Vue from 'vue'`导入的 Vue 构造函数，功能不完整，只提供了 **runtime-only** 的方式，并没有提供 像网页中-->\n<p><img src=\"http://static.zxinc520.com/blog/20190417/FDsekOzOdqSz.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"-回顾-包的-查找-规则\"><a class=\"markdownIt-Anchor\" href=\"#-回顾-包的-查找-规则\">#</a> - 回顾 ：包的 <strong>查找</strong> 规则</h4>\n<ol>\n<li>找 项目根目录中有没有 node_modules 的文件夹</li>\n<li>在 node_modules 中，根据包名，找对应的 vue 文件夹</li>\n<li>在 vue 文件夹中，找 一个叫 package.json 的包配置文件</li>\n<li>在 package.json 文件中，查找 一个 main 属性【mian 属性指定了这个包在被加载的时候的入口文件】</li>\n</ol>\n<p><strong>解决方案 1</strong>：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/Q2FwTyktL3nF.png?imageslim\" alt=\"mark\"></p>\n<p><strong>解决方案 2</strong>：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/67SE8EyWVRmn.png?imageslim\" alt=\"mark\"></p>\n<p><strong>解决方案 3（更优雅）：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/Cfv9yq1PVXPl.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"定义-文件形式-vue-组件-加载到页面上\"><a class=\"markdownIt-Anchor\" href=\"#定义-文件形式-vue-组件-加载到页面上\">#</a> 定义 文件形式 vue 组件 加载到页面上</h2>\n<p><strong>例如</strong>：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/znhigwsi4kiE.png?imageslim\" alt=\"mark\"></p>\n<p><strong>报错：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/6ag81mxVMdjN.png?imageslim\" alt=\"mark\"></p>\n<p><strong>原因：</strong></p>\n<ul>\n<li>默认，webpack 无法打包 .vue 文件，需要安装 *<em> 相关的 loader</em></li>\n</ul>\n<p><strong>解决方案：</strong></p>\n<ol>\n<li>\n<p>安装：执行  <code>npm i vue-loader vue-template-compiler -D</code>  命令</p>\n</li>\n<li>\n<p>配置 webpack.config.js 文件</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">&#123;</span>test<span class=\"token operator\">:</span><span class=\"token regex\">/\\.vue$/</span><span class=\"token punctuation\">,</span>use<span class=\"token operator\">:</span><span class=\"token string\">'vue-loader'</span><span class=\"token punctuation\">&#125;</span> \t<span class=\"token comment\">//处理 .vue后缀名的 loader</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/8cY6BeLLmNt2.png?imageslim\" alt=\"mark\"></p>\n<p>结果：还是报错</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/VgCmomodVkuA.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"原因vue-loader-在-15之后的版本都是-vue-loader-的使用都是需要伴生-vueloaderplugin-的\"><a class=\"markdownIt-Anchor\" href=\"#原因vue-loader-在-15之后的版本都是-vue-loader-的使用都是需要伴生-vueloaderplugin-的\">#</a> 原因：Vue-loader 在 15.* 之后的版本都是 vue-loader 的使用都是需要伴生 VueLoaderPlugin 的.</h4>\n<p>解决：在 <strong>webpack.config.js</strong> 中加入</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> VueLoaderPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"vue-loader/lib/plugin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  devtool<span class=\"token operator\">:</span> <span class=\"token string\">\"sourcemap\"</span><span class=\"token punctuation\">,</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./js/entry.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"bundle.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">VueLoaderPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/4zePeemdDl56.png?imageslim\" alt=\"mark\"></p>\n<p><strong>使用 render 函数 ：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/z60O8OR9qlLk.png?imageslim\" alt=\"mark\"><img src=\"http://static.zxinc520.com/blog/20190417/NG0rBbunP4N7.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"总结梳理\"><a class=\"markdownIt-Anchor\" href=\"#总结梳理\">#</a> 总结梳理：</h2>\n<h4 id=\"总结梳理-webpack-中如何使用-vue\"><a class=\"markdownIt-Anchor\" href=\"#总结梳理-webpack-中如何使用-vue\">#</a> 总结梳理： webpack 中如何使用 vue</h4>\n<ol>\n<li>\n<p>安装 vue 的包： cnpm i vue -S</p>\n</li>\n<li>\n<p>由于 在 webpack 中，推荐使用 .vue 这个组件模板文件定义组件，所以，需要安装 能解析这种文件的 loader ，执行命令：  <code>cnpm i vue-loader vue-template-complier -D</code></p>\n</li>\n<li>\n<p>在 main.js 中，导入 vue 模块 import Vue from ‘vue’</p>\n</li>\n<li>\n<p>定义一个 .vue 结尾的组件，其中，组件有三部分组成： template script style</p>\n</li>\n<li>\n<p>使用 import login from ‘./login.vue’ 导入这个组件</p>\n</li>\n<li>\n<p>创建 vm 的实例 var vm = new Vue ({el: ‘#app’, render: c =&gt; c (login) })</p>\n</li>\n<li>\n<p>在页面中创建一个 id 为 app 的 div 元素，作为我们 vm 实例要控制的区域；</p>\n</li>\n</ol>\n<h2 id=\"export-default-和-export-的使用方式\"><a class=\"markdownIt-Anchor\" href=\"#export-default-和-export-的使用方式\">#</a> export default 和 export 的使用方式</h2>\n<p><strong>基本使用：</strong></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h3&gt;这是登录组件，vue 文件定义出来的--&#123;&#123; msg &#125;&#125;&lt;&#x2F;h3&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  data() &#123;\n    return &#123;\n      msg: &quot;哈哈哈&quot;,\n    &#125;;\n  &#125;,\n  methods: &#123;\n    show() &#123;\n      console.log(&quot;调用了 login.vue 中的show 方法！&quot;);\n    &#125;,\n  &#125;,\n&#125;;\n&lt;&#x2F;script&gt;\n\n&lt;style&gt;&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/VJ8FVeRYb0oV.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"exportimport-export-default-是什么\"><a class=\"markdownIt-Anchor\" href=\"#exportimport-export-default-是什么\">#</a> export，import ，export default 是什么？</h2>\n<p>ES6 模块主要有两个功能：export 和 import<br>\n<strong>export</strong> 用于对外输出本模块（一个文件可以理解为一个模块）变量的接口<br>\n<strong> import</strong> 用于在一个模块中加载另一个含有 export 接口的模块。<br>\n也就是说使用 export 命令定义了模块的对外接口以后，其他 JS 文件就可以通过 import 命令加载这个模块（文件）。这几个都是 ES6 的语法。</p>\n<ul>\n<li>注意：export default 向外暴露的成员，可以使用任意的变量来接受</li>\n<li>注意：在一个模块中，export default 只允许向外暴露一次</li>\n<li>注意：在一个模块中，可以同时使用 export 和 export default 向外暴露成员</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">在 Node中，使用 <span class=\"token keyword\">var</span> 名称<span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'模块标识符'</span><span class=\"token punctuation\">)</span>\n\nmodule<span class=\"token punctuation\">.</span>exports和 exports 来暴露成员<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"export-与-export-default\"><a class=\"markdownIt-Anchor\" href=\"#export-与-export-default\">#</a> export 与 export default</h2>\n<p>上面讲的是 export 和 import，但是 <strong>export</strong> 跟 <strong>export default</strong> 有什么区别呢？如下：</p>\n<ol>\n<li>export 与 export default 均可用于导出常量、函数、文件、模块等</li>\n<li>你可以在其它文件或模块中通过 import+(常量 | 函数 | 文件 | 模块) 名的方式，将其导入，以便能够对其进行使用</li>\n<li>在一个文件或模块中，export、import 可以有多个，export default 仅有一个，<strong>export default</strong> 只能导出<strong>一个默认模块</strong>，这个模块<strong>可以匿名</strong>（ 引入的时候可以给这个模块取任意名字，例如 “obj”，且不需要用大括号括起来。）</li>\n</ol>\n<p><strong>export ：</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//demo1.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对应的引入方式：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//demo2.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> str<span class=\"token punctuation\">,</span> f <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"demo1\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>export default</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//demo1.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  a<span class=\"token operator\">:</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">,</span>\n  b<span class=\"token operator\">:</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对应的引入方式：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//demo2.js</span>\n<span class=\"token keyword\">import</span> obj <span class=\"token keyword\">from</span> <span class=\"token string\">\"demo1\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>通过 export 方式导出，在导入时要<strong>加 { }</strong>，export default 则 <strong>不需要</strong></li>\n</ol>\n<p>这样来说其实很多时候 export 与 export default 可以实现同样的目的，只是用法有些区别。注意第四条，通过 export 方式导出，在导入时要加 { }，export default 则不需要。使用 export default 命令，为模块指定默认输出，这样就不需要知道所要加载模块的变量名。</p>\n<p>例如：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">&#123;</span> name <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//import &#123; name &#125; from \"/.a.js\"</span>\n可以写成：\n<span class=\"token keyword\">var</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"李四\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> name\n<span class=\"token comment\">//import name from \"/.a.js\" 这里name不需要大括号</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"说明与比较new-vue-和-export-default\"><a class=\"markdownIt-Anchor\" href=\"#说明与比较new-vue-和-export-default\">#</a> 说明与比较：new Vue () 和 export default {}？</h3>\n<p>在生成、导出、导入、使用 Vue 组件的时候，像我这种新手就会常常被位于不同文件的  <code>new Vue()</code>  和  <code>export default&#123;&#125;</code>  搞得晕头转向。它们含义到底是什么，又有什么异同呢？</p>\n<p>首先，Vue 是什么？ po 主的理解是 Vue 就是一个构造函数，生成的实例是一个巨大的对象，可以包含数据、模板、挂载元素、方法、生命周期钩子等选项。</p>\n<p>所以渲染的时候，可以使用构造 Vue 实例的方式来渲染相应的 html 页面：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    el<span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span>\n    <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>那么 export default {} 又是来干嘛的？</p>\n<p>这是在复用组件的时候用到的。假设我们写了一个单页面组件 A 文件，而在另一个文件 B 里面需要用到它，那么就要用 <a href=\"http://es6.ruanyifeng.com/?search=%E7%9C%81%E7%95%A5&amp;x=0&amp;y=0#docs/module\">ES6 的 import/export 语法</a> ，在文件 A 中定义输出接口  <code>export **</code> ，在文件 B 中引入  <code>import **</code> ，然后再生成一个 Vue 实例  <code>new Vue (**)</code> ，把引入的组件用起来，这样就可以复用组件 A 去配合文件 B 生成 html 页面了。</p>\n<h2 id=\"结合-webpack-使用-vue-router\"><a class=\"markdownIt-Anchor\" href=\"#结合-webpack-使用-vue-router\">#</a> 结合 webpack 使用 vue-router</h2>\n<ol>\n<li>安装  <code>npm i vue-router -S </code></li>\n</ol>\n<p>例：</p>\n<p>目录结构：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/MFFstwRsuS8S.png?imageslim\" alt=\"mark\"></p>\n<p><strong>main.js：</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//在 webpack 构建的项目中，使用Vue 进行开发</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"../node_modules/vue/dist/vue.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//1. 导入 vue-router 包</span>\n<span class=\"token keyword\">import</span> VueRouter <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-router\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//2. 手动安装</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//导入app组件</span>\n<span class=\"token keyword\">import</span> app <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//导入 Account 组件</span>\n<span class=\"token keyword\">import</span> account <span class=\"token keyword\">from</span> <span class=\"token string\">\"./main/Account.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//导入 GoodsList 组件</span>\n<span class=\"token keyword\">import</span> goodslist <span class=\"token keyword\">from</span> <span class=\"token string\">\"./main/GoodsList.vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//3. 创建路由对象</span>\n<span class=\"token keyword\">let</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"/account\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> account <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"/goodslist\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> goodslist <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    msg<span class=\"token operator\">:</span> <span class=\"token string\">\"12322\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">c</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  router<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//注意：App 这个组件，是通过 VM 实例的 render 函数，渲染出来的，render 函数如果要渲染 组件渲染出来的组件，只能是 el ：'#app' 所指定的 元素中</span>\n\n<span class=\"token comment\">//Account 和 GoodsList 组件，是通过 路由匹配监听到的，所以，这两个组件，只能展示到 属于 路由的 &lt;router-view>&lt;/router-view> 中去</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>App.vue:</strong></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;这是app组件&lt;&#x2F;h1&gt;\n    &lt;router-link to&#x3D;&quot;&#x2F;account&quot;&gt;account&lt;&#x2F;router-link&gt;\n    &lt;router-link to&#x3D;&quot;&#x2F;goodslist&quot;&gt;goodslist&lt;&#x2F;router-link&gt;\n    &lt;router-view&gt;&lt;&#x2F;router-view&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;&lt;&#x2F;script&gt;\n&lt;style&gt;&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/8RslBeQhHAvx.gif\" alt=\"mark\"></p>\n<h2 id=\"webpack-路由嵌套\"><a class=\"markdownIt-Anchor\" href=\"#webpack-路由嵌套\">#</a> webpack - 路由嵌套</h2>\n<p>目录结构：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/KpfhuMnyjazc.png?imageslim\" alt=\"mark\"></p>\n<p><strong>main.js:</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//在 webpack 构建的项目中，使用Vue 进行开发</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"../node_modules/vue/dist/vue.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//1. 导入 vue-router 包</span>\n<span class=\"token keyword\">import</span> VueRouter <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-router\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//2. 手动安装</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//导入app组件</span>\n<span class=\"token keyword\">import</span> app <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//导入 Account 组件</span>\n<span class=\"token keyword\">import</span> account <span class=\"token keyword\">from</span> <span class=\"token string\">\"./main/Account.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//导入 GoodsList 组件</span>\n<span class=\"token keyword\">import</span> goodslist <span class=\"token keyword\">from</span> <span class=\"token string\">\"./main/GoodsList.vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> login <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son/login.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> register <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son/register.vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//3. 创建路由对象</span>\n<span class=\"token keyword\">let</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/account\"</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> account<span class=\"token punctuation\">,</span>\n      children<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"login\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> login <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"register\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> register <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"/goodslist\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> goodslist <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    msg<span class=\"token operator\">:</span> <span class=\"token string\">\"12322\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">c</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  router<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//注意：App 这个组件，是通过 VM 实例的 render 函数，渲染出来的，render 函数如果要渲染 组件渲染出来的组件，只能是 el ：'#app' 所指定的 元素中</span>\n\n<span class=\"token comment\">//Account 和 GoodsList 组件，是通过 路由匹配监听到的，所以，这两个组件，只能展示到 属于 路由的 &lt;router-view>&lt;/router-view> 中去</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>App.vue:</strong></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;这是app组件&lt;&#x2F;h1&gt;\n    &lt;router-link to&#x3D;&quot;&#x2F;account&quot;&gt;account&lt;&#x2F;router-link&gt;\n    &lt;router-link to&#x3D;&quot;&#x2F;goodslist&quot;&gt;goodslist&lt;&#x2F;router-link&gt;\n    &lt;router-view&gt;&lt;&#x2F;router-view&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;&lt;&#x2F;script&gt;\n\n&lt;style&gt;&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>Account:</strong></p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;这是Account组件&lt;&#x2F;h1&gt;\n\n    &lt;router-link to&#x3D;&quot;&#x2F;account&#x2F;login&quot;&gt;登录&lt;&#x2F;router-link&gt;\n    &lt;router-link to&#x3D;&quot;&#x2F;account&#x2F;register&quot;&gt;注册&lt;&#x2F;router-link&gt;\n    &lt;router-view&gt;&lt;&#x2F;router-view&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;&lt;&#x2F;script&gt;\n\n&lt;style&gt;&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/tSeVisl10K0W.gif\" alt=\"mark\"></p>\n<h2 id=\"组件中-style-标签-lang-属性和-scoped-属性的介绍\"><a class=\"markdownIt-Anchor\" href=\"#组件中-style-标签-lang-属性和-scoped-属性的介绍\">#</a> 组件中 style 标签 lang 属性和 scoped 属性的介绍</h2>\n<p>**scoped：** 在子组件中设置 style 属性，如果不加 scoped 属性，如果是单页面程序，样式就会作用到全局中去，加了 scoped 属性以后，表示限制了该样式作用域只在该组件中。</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;这是goods组件&lt;&#x2F;h1&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;&lt;&#x2F;script&gt;\n\n&lt;style scoped&gt;\ndiv &#123;\n  color: red;\n&#125;\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>**lang 属性：** 普通的 style 标签只支持普通的样式，如果想启用 scss 或 less, 需要为 style 设置 lang 属性</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;这是account组件&lt;&#x2F;h1&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&quot;scss&quot; scoped&gt;\nbody &#123;\n  div &#123;\n    font-style: italic;\n  &#125;\n&#125;\n&lt;&#x2F;style&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"抽离路由模块\"><a class=\"markdownIt-Anchor\" href=\"#抽离路由模块\">#</a> 抽离路由模块</h2>\n<p>目录结构：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190417/imC2sybXMC8G.png?imageslim\" alt=\"mark\"></p>\n<p><strong>main.js:</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//在 webpack 构建的项目中，使用Vue 进行开发</span>\n<span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"../node_modules/vue/dist/vue.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//1. 导入 vue-router 包</span>\n<span class=\"token keyword\">import</span> VueRouter <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-router\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//2. 手动安装</span>\nVue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>VueRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//导入app组件</span>\n<span class=\"token keyword\">import</span> app <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//导入 自定义路由模块</span>\n<span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">\"./router.js\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    msg<span class=\"token operator\">:</span> <span class=\"token string\">\"12322\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">c</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  router<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//注意：App 这个组件，是通过 VM 实例的 render 函数，渲染出来的，render 函数如果要渲染 组件渲染出来的组件，只能是 el ：'#app' 所指定的 元素中</span>\n\n<span class=\"token comment\">//Account 和 GoodsList 组件，是通过 路由匹配监听到的，所以，这两个组件，只能展示到 属于 路由的 &lt;router-view>&lt;/router-view> 中去</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>router.js:</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> VueRouter <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue-router\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//导入 Account 组件</span>\n<span class=\"token keyword\">import</span> account <span class=\"token keyword\">from</span> <span class=\"token string\">\"./main/Account.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//导入 GoodsList 组件</span>\n<span class=\"token keyword\">import</span> goodslist <span class=\"token keyword\">from</span> <span class=\"token string\">\"./main/GoodsList.vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> login <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son/login.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> register <span class=\"token keyword\">from</span> <span class=\"token string\">\"./son/register.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//3. 创建路由对象</span>\n<span class=\"token keyword\">let</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n  routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">&#123;</span>\n      path<span class=\"token operator\">:</span> <span class=\"token string\">\"/account\"</span><span class=\"token punctuation\">,</span>\n      component<span class=\"token operator\">:</span> account<span class=\"token punctuation\">,</span>\n      children<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"login\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> login <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"register\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> register <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#123;</span> path<span class=\"token operator\">:</span> <span class=\"token string\">\"/goodslist\"</span><span class=\"token punctuation\">,</span> component<span class=\"token operator\">:</span> goodslist <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> router<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "webpack",
                "vue",
                "webpack 后续问题"
            ]
        },
        {
            "id": "http://example.com/2019/04/13/VueLearn05/",
            "url": "http://example.com/2019/04/13/VueLearn05/",
            "title": "监听事件、nrm、webpack",
            "date_published": "2019-04-13T06:27:37.000Z",
            "content_html": "<h1 id=\"vue-第五天\"><a class=\"markdownIt-Anchor\" href=\"#vue-第五天\">#</a> Vue 第五天</h1>\n<blockquote>\n<p>监听事件（keyup ，watch ，computed ）</p>\n<p>nrm （简单介绍了下）</p>\n<p>webpack （很重要！很关键！很实用！重点中的重点！知识点有点多，得慢慢品味！）</p>\n</blockquote>\n<h2 id=\"监听事件\"><a class=\"markdownIt-Anchor\" href=\"#监听事件\">#</a> 监听事件</h2>\n<h4 id=\"需求实现名称监听案例\"><a class=\"markdownIt-Anchor\" href=\"#需求实现名称监听案例\">#</a> 需求：实现名称监听案例</h4>\n<h4 id=\"1keyup-事件监听\"><a class=\"markdownIt-Anchor\" href=\"#1keyup-事件监听\">#</a> 1.keyup 事件监听</h4>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@keyup</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getFullName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@keyup</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>getFullName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fullName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      lastName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      fullName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getFullName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fullName <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"2使用-watch-监听-更常用-用途更广\"><a class=\"markdownIt-Anchor\" href=\"#2使用-watch-监听-更常用-用途更广\">#</a> 2. 使用 watch 监听 （ 更常用 – 用途更广 ）</h4>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fullName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      lastName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      fullName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">//使用这个 属性，可以监视 data 中指定数据的变化，然后触发这个 watch 中对应的 function 处理函数</span>\n    watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">firstName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newVal<span class=\"token punctuation\">,</span> oldVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// this.fullName = this.firstName + this.lastName</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fullName <span class=\"token operator\">=</span> newVal <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">lastName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newVal<span class=\"token punctuation\">,</span> oldVal</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// this.fullName = this.firstName + this.lastName</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>fullName <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> newVal<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/4gxmjjUxK2At.gif\" alt=\"mark\"></p>\n<ul>\n<li>\n<h5 id=\"watch-监听-路由-改变\"><a class=\"markdownIt-Anchor\" href=\"#watch-监听-路由-改变\">#</a> watch 监听 路由 改变</h5>\n</li>\n</ul>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/login<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-link</span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/register<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>注册<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-link</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>router-view</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>router-view</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> login <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;h3>这是登录子组件&lt;/h3>\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> register <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    template<span class=\"token operator\">:</span> <span class=\"token string\">\"&lt;h3>这是注册子组件&lt;/h3>\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> router <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VueRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    routes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">&#123;</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">,</span>\n        component<span class=\"token operator\">:</span> login<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#123;</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">\"/register\"</span><span class=\"token punctuation\">,</span>\n        component<span class=\"token operator\">:</span> register<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    linkActiveClass<span class=\"token operator\">:</span> <span class=\"token string\">\"myactive\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    router<span class=\"token punctuation\">,</span>\n    watch<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token string\">\"$route.path\"</span><span class=\"token punctuation\">(</span>newVal<span class=\"token punctuation\">,</span> oldVal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newVal <span class=\"token operator\">==</span> <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"欢迎来到登录页面\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newVal <span class=\"token operator\">==</span> <span class=\"token string\">\"/register\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"欢迎来到注册页面\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/6V2XPG6gVhim.gif\" alt=\"mark\"></p>\n<h4 id=\"3-computed-监听\"><a class=\"markdownIt-Anchor\" href=\"#3-computed-监听\">#</a> 3. computed 监听</h4>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>firstName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lastName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>fullName<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token keyword\">let</span> vm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    el<span class=\"token operator\">:</span> <span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      firstName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      lastName<span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">//计算属性：在引用的时候，一定不要加() 去调用，直接把它当作 普通属性去使用就好了</span>\n    <span class=\"token comment\">//只要 计算属性，这个方法内部，所用到的 任何 data 中的数据发生了变化，就会立即重新 计算 这个属性的值</span>\n    <span class=\"token comment\">//计算属性的求值结果，会被缓存起来，方便下次直接使用；如果 计算属性中的数据 都没有发生变化，则不会 重新对 计算属性求值</span>\n    computed<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">fullName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"methodswatchcomputed-的区别\"><a class=\"markdownIt-Anchor\" href=\"#methodswatchcomputed-的区别\">#</a> <strong>methods,watch,computed 的区别</strong></h4>\n<ol>\n<li><code>computed</code>  属性的结果会被缓存，除非依赖的响应式属性变化才会重新计算。主要当作属性来使用；</li>\n<li><code>methods</code>  方法表示一个具体的操作，主要书写业务逻辑；</li>\n<li><code>watch</code>  一个对象，键是需要观察的表达式，值是对应回调函数。主要用来监听某些特定数据的变化，从而进行某些具体的业务逻辑操作；可以看作是 computed 和 methods 的结合体；</li>\n</ol>\n<h2 id=\"nrm\"><a class=\"markdownIt-Anchor\" href=\"#nrm\">#</a> nrm</h2>\n<ul>\n<li>\n<p>什么是 nrm?</p>\n<p><strong>nrm</strong> 是一个  <code>npm</code>  源管理器，允许你快速地在  <code>npm</code>  源间切换</p>\n</li>\n<li>\n<p>安装 nrm</p>\n<p>在命令行执行命令， <code>npm install -g nrm</code> ，全局安装 nrm。</p>\n</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/2eNadQOmpWKL.png?imageslim\" alt=\"mark\"></p>\n<ul>\n<li>\n<p>切换</p>\n<p>如果要切换到 <code>taobao</code>  源，执行命令 <code>nrm use taobao</code> 。</p>\n</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/4BzzVOzz2ER5.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"webpack\"><a class=\"markdownIt-Anchor\" href=\"#webpack\">#</a> webpack</h2>\n<h4 id=\"1在网页中会引用哪些常见的静态资源\"><a class=\"markdownIt-Anchor\" href=\"#1在网页中会引用哪些常见的静态资源\">#</a> 1. 在网页中会引用哪些常见的静态资源？</h4>\n<ul>\n<li>JS\n<ul>\n<li>.js .jsx .coffee .ts（TypeScript 类 C# 语言）</li>\n</ul>\n</li>\n<li>CSS\n<ul>\n<li>.css .less .sass .scss</li>\n</ul>\n</li>\n<li>Images\n<ul>\n<li>.jpg .png .gif .bmp .svg</li>\n</ul>\n</li>\n<li>字体文件（Fonts）\n<ul>\n<li>.svg .ttf .eot .woff .woff2</li>\n</ul>\n</li>\n<li>模板文件\n<ul>\n<li>.ejs .jade .vue【这是在 webpack 中定义组件的方式，推荐这么用】</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"2网页中引入的静态资源多了以后有什么问题\"><a class=\"markdownIt-Anchor\" href=\"#2网页中引入的静态资源多了以后有什么问题\">#</a> 2. 网页中引入的静态资源多了以后有什么问题？？？</h4>\n<ol>\n<li>网页加载速度慢， 因为 我们要发起很多的二次请求；</li>\n<li>要处理错综复杂的依赖关系</li>\n</ol>\n<h4 id=\"3如何解决上述两个问题\"><a class=\"markdownIt-Anchor\" href=\"#3如何解决上述两个问题\">#</a> 3. 如何解决上述两个问题</h4>\n<ol>\n<li>合并、压缩、精灵图、图片的 Base64 编码</li>\n<li>可以使用之前学过的 requireJS、也可以使用 webpack 可以解决各个包之间的复杂依赖关系；</li>\n</ol>\n<h4 id=\"4什么是-webpack\"><a class=\"markdownIt-Anchor\" href=\"#4什么是-webpack\">#</a> 4. 什么是 webpack?</h4>\n<p>webpack 是前端的一个项目构建工具，它是基于 Node.js 开发出来的一个前端工具；</p>\n<h4 id=\"5如何完美实现上述的-2-种解决方案\"><a class=\"markdownIt-Anchor\" href=\"#5如何完美实现上述的-2-种解决方案\">#</a> 5. 如何完美实现上述的 2 种解决方案</h4>\n<ol>\n<li>使用 <a href=\"https://www.gulpjs.com.cn/\">Gulp</a>， 是基于 task 任务的；</li>\n<li>使用 <a href=\"https://webpack.github.io/\">Webpack</a>， 是基于整个项目进行构建的；\n<ul>\n<li>借助于 webpack 这个前端自动化构建工具，可以完美实现资源的合并、打包、压缩、混淆等诸多功能。</li>\n<li>根据官网的图片介绍 webpack 打包的过程</li>\n<li><a href=\"http://webpack.github.io/\">webpack 官网</a></li>\n</ul>\n</li>\n</ol>\n<h4 id=\"6webpack-安装的两种方式\"><a class=\"markdownIt-Anchor\" href=\"#6webpack-安装的两种方式\">#</a> 6.webpack 安装的两种方式</h4>\n<ol>\n<li>运行 <code>npm i webpack -g </code>  全局安装 webpack，这样就能在全局使用 webpack 的命令</li>\n<li>在项目根目录中运行 <code>npm i webpack --save-dev</code>  安装到项目依赖中</li>\n</ol>\n<h2 id=\"webpack-小案例\"><a class=\"markdownIt-Anchor\" href=\"#webpack-小案例\">#</a> webpack 小案例</h2>\n<p><strong>最终实现效果图：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/Nhxhjre7JLIk.gif\" alt=\"mark\"></p>\n<h2 id=\"第一阶段用-webpack-打包-mainjs-文件生成-bundlejs-文件\"><a class=\"markdownIt-Anchor\" href=\"#第一阶段用-webpack-打包-mainjs-文件生成-bundlejs-文件\">#</a> 第一阶段：用 webpack 打包 main.js 文件生成 bundle.js 文件</h2>\n<p><strong><em>目录结构</em></strong>：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/lCOHlyRXWvxs.png?imageslim\" alt=\"mark\"></p>\n<p><strong>index.html</strong>：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../dist/bundle.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第1个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第2个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第3个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第4个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第5个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第6个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第7个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第8个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第9个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>这是第10个li<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>main.js:</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// main.js 是我们项目的JS的入口文件</span>\n\n<span class=\"token comment\">//1.导入 Jquery</span>\n<span class=\"token comment\">// import *** from *** 是 ES6 中导入模块的方式</span>\n<span class=\"token comment\">//由于 ES6 语法太高级了，浏览器解析不了，所以，执行会报错</span>\n<span class=\"token keyword\">import</span> $ <span class=\"token keyword\">from</span> <span class=\"token string\">\"jquery\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li:odd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    background<span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"li:even\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">background</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"#\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"D97634\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>1. 安装完相关包之后，在根目录下运行  <code>webpack .\\src\\main.js -o .\\dist\\bundle.js</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/VN1klW9vTlKk.png?imageslim\" alt=\"mark\"></p>\n<p>运行结果：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/cCQTanNAophR.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"第二阶段配置-webpackconfigjs\"><a class=\"markdownIt-Anchor\" href=\"#第二阶段配置-webpackconfigjs\">#</a> 第二阶段：配置 webpack.config.js</h2>\n<blockquote>\n<p>Webpack 在执行的时候，除了在 <strong>命令行传入参数</strong>，还可以通过指定的 <strong>配置文件</strong> 来执行。默认情况下，会搜索当前目录的  <code>webpack.config.js</code>  文件，这个文件是一个 node.js 模块，返回一个 json 格式的配置信息对象，或者通过  <code>--config</code>  选项来指定配置文件。</p>\n</blockquote>\n<h5 id=\"当我们在-控制台直接输入-webpack-命令执行的时候webpack-做了以下几步\"><a class=\"markdownIt-Anchor\" href=\"#当我们在-控制台直接输入-webpack-命令执行的时候webpack-做了以下几步\">#</a> 当我们在 控制台，直接输入 <strong>webpack</strong> 命令执行的时候，webpack 做了以下几步：</h5>\n<ol>\n<li>首先，webpack 发现，我们并没有通过命令的形式，给它指定入口和出口</li>\n<li>webpack 就会去 项目的 根目录中，查找一个叫做  <code>webpack.config.js</code>  的配置文件</li>\n<li>当找到配置文件后，webpack 会去解析执行这个 配置文件，当解析执行完配置文件后，就得到了 配置文件中，导出的配置对象</li>\n<li>当 webpack 拿到 配置对象后，就拿到了 配置对象中，指定的 入口 和 出口，然后进行打包构建；</li>\n</ol>\n<p><strong>webpack.config.js</strong>：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  entry<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./src/main.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 入口，表示，要使用 webpack 打包哪个文件</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 输出文件相关的配置</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定 打包好的文件，输出到哪个目录中去</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"bundle.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 这是指定 输出的文件的名称</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>然后再根目录下运行 webpack</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190412/Jtcry4FyA52b.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"使用-webpack-dev-server-这个工具来实现自动打包编译的功能\"><a class=\"markdownIt-Anchor\" href=\"#使用-webpack-dev-server-这个工具来实现自动打包编译的功能\">#</a> 使用 webpack-dev-server 这个工具，来实现自动打包编译的功能</h2>\n<ol>\n<li>运行  <code>npm i webpack-dev-server -D</code>  把这个工具安装到项目的本地开发依赖 <a href=\"https://blog.csdn.net/wangguoyu1996/article/details/80443861\">npm install --save 和 npm install -d 的区别</a></li>\n<li>安装完毕后，这个 工具的用法， 和 webpack 命令的用法，完全一样</li>\n<li>由于，我们是在项目中，本地安装的 webpack-dev-server ， 所以，无法把它当作 脚本命令，在 powershell 终端中直接运行；（只有那些 安装到 全局 -g 的工具，才能在 终端中正常执行）</li>\n<li>注意： webpack-dev-server 这个工具，如果想要正常运行，要求，在本地项目中，必须安装 webpack</li>\n<li>webpack-dev-server 帮我们打包生成的 bundle.js 文件，并没有存放到 实际的 物理磁盘上；而是，直接托管到了 电脑的内存中，所以，我们在 项目根目录中，根本找不到 这个打包好的 bundle.js;</li>\n<li>我们可以认为， webpack-dev-server 把打包好的 文件，以一种虚拟的形式，托管到了 咱们项目的 根目录中，虽然我们看不到它，但是，可以认为， 和 dist src node_modules 平级，有一个看不见的文件，叫做 bundle.js</li>\n</ol>\n<ul>\n<li>再 package.json 文件中 配置  <code>webpack-dev-server </code></li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/0mEiuATRmg4V.png?imageslim\" alt=\"mark\"></p>\n<ul>\n<li>在根目录下运行命令： <code>npm run dev</code></li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/01rkpce0a7ou.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"自动编译保存代码即自动刷新浏览器\"><a class=\"markdownIt-Anchor\" href=\"#自动编译保存代码即自动刷新浏览器\">#</a> 自动编译（保存代码即自动刷新浏览器）</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/sEKMRkaMQOuX.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"运行-npm-run-dev-后-自动-打开对应端口号的浏览器窗口-改端口号-显示内容\"><a class=\"markdownIt-Anchor\" href=\"#运行-npm-run-dev-后-自动-打开对应端口号的浏览器窗口-改端口号-显示内容\">#</a> 运行 npm run dev 后 自动 <strong>打开对应端口号</strong>的浏览器窗口 改端口号 显示内容</h2>\n<h3 id=\"方式一配置-packagejson-文件\"><a class=\"markdownIt-Anchor\" href=\"#方式一配置-packagejson-文件\">#</a> 方式一：配置  <code>package.json</code>  文件</h3>\n<p>优点：------- 推荐，简单，直接。在开发中更常用。</p>\n<p><strong>package.json:</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/bhRisI6Rkma4.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"方式二配置-webpackconfigjs-文件\"><a class=\"markdownIt-Anchor\" href=\"#方式二配置-webpackconfigjs-文件\">#</a> 方式二：配置 webpack.config.js 文件</h3>\n<ul>\n<li>相比之下 麻烦一点</li>\n</ul>\n<p><strong>webpack.config.js：</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 启用热更新的 第2步</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webpack\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  entry<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./src/main.js\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 入口，表示，要使用 webpack 打包哪个文件</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 输出文件相关的配置</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定 打包好的文件，输出到哪个目录中去</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"bundle.js\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 这是指定 输出的文件的名称</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//这是配置  dev-server 命令参数的第二种形式，相对来说，麻烦一点。</span>\n    open<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//自动打开浏览器</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//设置启动时候的运行端口</span>\n    contentBase<span class=\"token operator\">:</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span>\n    hot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">//启用热更新 第1步</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">//配置插件的节点</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>HotModuleReplacementPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// new 一个热更新的 模块对象， 这是 启用热更新的第 3 步</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"使用-html-webpack-plugin-插件\"><a class=\"markdownIt-Anchor\" href=\"#使用-html-webpack-plugin-插件\">#</a> 使用 html-webpack-plugin 插件</h2>\n<blockquote>\n<p>配合  <code>webpack-dev-server</code>  工具使用</p>\n<p>作用：为 html 文件中引入的外部资源</p>\n</blockquote>\n<p><strong>这个插件的两个作用：</strong></p>\n<ul>\n<li>为 html 文件中引入的外部资源如 <code>script</code> 、 <code>link</code>  动态添加每次 compile 后的 hash，防止引用缓存的外部文件问题</li>\n<li>可以生成创建 html 入口文件，比如单页面可以生成一个 html 文件入口，配置<strong> N</strong> 个 <code>html-webpack-plugin</code>  可以生成<strong> N</strong> 个页面入口</li>\n</ul>\n<p><strong>实例作用（简单来说）</strong>：</p>\n<ol>\n<li>\n<p>自动在内存中根据指定页面生成一个内存的页面</p>\n</li>\n<li>\n<p>自动，把打包好的 bundle.js 追加到页面中去</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/A77bGaRpNnBK.png?imageslim\" alt=\"mark\"></p>\n</li>\n</ol>\n<h6 id=\"安装使用如下\"><a class=\"markdownIt-Anchor\" href=\"#安装使用如下\">#</a> <strong>安装使用如下：</strong></h6>\n<p>一、首先安装 html-webpack-plugin 插件</p>\n<p>​ 在 cmd 中打开项目，输入  <code>npm i html-webpack-plugin -D</code></p>\n<p>二、在 webpack-config.js 的 plugins 里面添加 信息，如下图</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/FtRgDnktWRwG.png?imageslim\" alt=\"mark\"></p>\n<p>然后在 cmd 中输入  <code>npm run dev</code>  ，即可以在项目文件夹下自动生成 index.html。如果报错，则表示，未安装 html-webpack-plugin 插件。</p>\n<p>注：不配置任何选项的 <code>html-webpack-plugin</code>  插件，他会默认将 webpack 中的 <code>entry</code>  配置所有入口 thunk 和 <code>extract-text-webpack-plugin</code>  抽取的 css 样式都插入到文件指定的位置</p>\n<h2 id=\"webpack-处理第三方文件类型的过程\"><a class=\"markdownIt-Anchor\" href=\"#webpack-处理第三方文件类型的过程\">#</a> webpack 处理第三方文件类型的过程</h2>\n<h4 id=\"需求打包处理-css-文件\"><a class=\"markdownIt-Anchor\" href=\"#需求打包处理-css-文件\">#</a> 需求：打包处理 css 文件</h4>\n<p><strong>注意：</strong></p>\n<ul>\n<li>\n<p>webpack, 默认只能打包处理 JS 类型的文件，无法处理 其它的非 JS 类型的文件； 如果要处理 非 JS 类型的文件，我们需要手动安装一些 合适 第三方 loader 加载器；</p>\n</li>\n<li>\n<p>1. 如果想要打包处理 css 文件，需要安装  <code>npm i style-loader css-loader -D</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/oqXTmYRoKMoA.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li>\n<p>2. 打开 webpack.config.js 这个配置文件，在 里面，新增一个 配置节点，叫做 module, 它是一个对象；在 这个 module 对象身上，有个 rules 属性，这个 rules 属性是个 数组；这个数组中，存放了，所有第三方文件的 匹配和 处理规则；</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/Xu64lPnxIQLS.png?imageslim\" alt=\"mark\"></p>\n</li>\n</ul>\n<p><strong>webpack 处理第三方文件类型的过程：</strong></p>\n<ol>\n<li>发现这个 要处理的文件不是 JS 文件，然后就去 配置文件中，查找有没有对应的第三方 loader 规则</li>\n<li>如果能找到对应的规则， 就会调用 对应的 loader 处理 这种文件类型；</li>\n<li>在调用 loader 的时候，是从后往前调用的；</li>\n<li>当最后的一个 loader 调用完毕，会把 处理的结果，直接交给 webpack 进行 打包合并，最终输出到 bundle.js 中去</li>\n</ol>\n<h2 id=\"打包-less-文件\"><a class=\"markdownIt-Anchor\" href=\"#打包-less-文件\">#</a> 打包 less 文件</h2>\n<p><strong>第一步：安装包：</strong></p>\n<ol>\n<li>\n<p>安装  <code>npm i less-loader -D</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/0bSMpt6TO1EJ.png?imageslim\" alt=\"mark\"></p>\n</li>\n<li>\n<p>less-loader 内部依赖 less 包，所以安装  <code>npm i less -D</code></p>\n</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/5RJ7elAXllGf.png?imageslim\" alt=\"mark\"></p>\n<p><strong>第二步：配置 webpack.config.js 文件</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/qjRV20IM5XiU.png?imageslim\" alt=\"mark\"></p>\n<p>第三步：根目录下 运行  <code>npm run dev</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190413/Nhxhjre7JLIk.gif\" alt=\"mark\"></p>\n",
            "tags": [
                "webpack",
                "vue",
                "监听事件（keyup ，watch ，computed ）",
                "nrm"
            ]
        }
    ]
}