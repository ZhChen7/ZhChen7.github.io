{
    "version": "https://jsonfeed.org/version/1",
    "title": "sunflower • All posts by \"rollup\" tag",
    "description": "周琛的博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2019/08/04/ES6intro/",
            "url": "http://example.com/2019/08/04/ES6intro/",
            "title": "ES6 语法",
            "date_published": "2019-08-04T08:46:35.000Z",
            "content_html": "<h1 id=\"es6-语法\"><a class=\"markdownIt-Anchor\" href=\"#es6-语法\">#</a> ES6 语法</h1>\n<blockquote>\n<p>本章主要讲解工作中最常用的 ES6 语法，包括 <strong>Module Class Promise</strong> 等语法，还会介绍使用 <strong>babel webpack rollup</strong> 来搭建 ES6 编译环境。</p>\n<p><a href=\"http://es6.ruanyifeng.com/\">ECMAScript 6 入门</a></p>\n</blockquote>\n<h2 id=\"es6-使用\"><a class=\"markdownIt-Anchor\" href=\"#es6-使用\">#</a> ES6 使用</h2>\n<ul>\n<li>开发环境已经普及使用</li>\n<li>浏览器环境却支持不好（ 需要开发环境编译 ）</li>\n<li>内容很多，重点了解常用语法</li>\n<li>面试：开发环境的使用 + 重点语法的掌握</li>\n</ul>\n<h3 id=\"问题\"><a class=\"markdownIt-Anchor\" href=\"#问题\">#</a> 问题</h3>\n<ul>\n<li>ES6 模块化如何使用，开发环境如何打包</li>\n<li>Class 和 普通构造函数 有何区别 ？</li>\n<li>Promise 的基本使用和原理</li>\n<li>总结一下 ES6 其它常用功能</li>\n</ul>\n<h2 id=\"2-1-es6-模块化语法\"><a class=\"markdownIt-Anchor\" href=\"#2-1-es6-模块化语法\">#</a> 2-1 ES6 模块化语法</h2>\n<blockquote>\n<p>ES6 模块化如何使用，开发环境如何打包</p>\n</blockquote>\n<h3 id=\"知识点\"><a class=\"markdownIt-Anchor\" href=\"#知识点\">#</a> 知识点</h3>\n<p><strong>ES6 模块化如何使用，开发环境如何打包:</strong></p>\n<ul>\n<li>模块化的基本语法</li>\n<li>开发环境的配置</li>\n<li>关于 JS 众多 模块化标准</li>\n</ul>\n<h4 id=\"export-语法\"><a class=\"markdownIt-Anchor\" href=\"#export-语法\">#</a> export 语法</h4>\n<blockquote>\n<p>export 语法</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">/*util1.js*/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span>\n  a<span class=\"token operator\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*util2.js*/</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fn1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fn2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/*index.js*/</span>\n<span class=\"token keyword\">import</span> util1 <span class=\"token keyword\">from</span> <span class=\"token string\">\"./util1.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> fn1<span class=\"token punctuation\">,</span> fn2 <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./util2.js\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>util1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">fn2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"开发环境-babel\"><a class=\"markdownIt-Anchor\" href=\"#开发环境-babel\">#</a> 开发环境 - babel</h4>\n<blockquote>\n<p>Babel 是一个 JavaScript 编译器。<a href=\"https://babeljs.io/\">官网</a></p>\n<p>使用技巧 可参考 <a href=\"http://zxinc520.com/lcj/%225cc4640d9b3032095d9e5754%22\">React 学习第一天 ：webpack 中使用 Babel 配置</a></p>\n<p>和 <a href=\"http://zxinc520.com/lcj/%225cb72a04009ae94788aa0d7f%22\">Vue 第六天学习 ：webpack 中 babel 的配置</a></p>\n</blockquote>\n<h4 id=\"开发环境-webpack\"><a class=\"markdownIt-Anchor\" href=\"#开发环境-webpack\">#</a> 开发环境 - webpack</h4>\n<blockquote>\n<p>开发环境 - webpack - <em>webpack</em> 是一个模块打包器 <a href=\"https://webpack.js.org/\">官网</a></p>\n<p>详情 可参考我的博客：<a href=\"http://zxinc520.com/lcj/%225cb181596d3d4a5cb52b65c9%22\">Vue 第五天：webpack</a> 和 <a href=\"http://zxinc520.com/lcj/%225cb72a04009ae94788aa0d7f%22\">Vue 第六天学习：深入 webpack</a> 以及 <a href=\"http://zxinc520.com/lcj/%225cc4640d9b3032095d9e5754%22\">React 学习第一天：创建基本的 webpack4.x 项目 </a></p>\n</blockquote>\n<h4 id=\"rollupjs\"><a class=\"markdownIt-Anchor\" href=\"#rollupjs\">#</a> rollup.js</h4>\n<blockquote>\n<p>概述 (Overview) <a href=\"https://www.rollupjs.com/guide/zh\">中文文档</a> <a href=\"https://rollupjs.org/guide/en/\">官网</a></p>\n<p>Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码，例如 library 或应用程序。Rollup 对代码模块使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。ES6 模块可以使你自由、无缝地使用你最喜爱的 library 中那些最有用独立函数，而你的项目不必携带其他未使用的代码。ES6 模块最终还是要由浏览器原生实现，但当前 Rollup 可以使你提前体验</p>\n<p><strong>rollup 功能单一（极致） ，webpack 功能强大</strong></p>\n</blockquote>\n<h4 id=\"关于-js-众多-模块化标准\"><a class=\"markdownIt-Anchor\" href=\"#关于-js-众多-模块化标准\">#</a> 关于 JS 众多 模块化标准</h4>\n<blockquote>\n<p>关于 JS 众多 模块化标准</p>\n<p>详情可参考我的博客：<a href=\"http://zxinc520.com/lcj/%225d31940b724e8113740499b3%22\">开发环境： 模块化</a></p>\n</blockquote>\n<p><strong>发展过程</strong></p>\n<ul>\n<li>没有模块化</li>\n<li>AMD 成为 标准，require.js （也有 CMD【<strong>用的不多</strong> 】）</li>\n<li>前端打包工具，nodejs 模块化可以被使用</li>\n<li>ES6 出现 ，想统一现在所有的模块化标准</li>\n<li>nodejs 积极支持，浏览器尚未统一</li>\n<li>你可以自造 lib，但是不要自造标准</li>\n</ul>\n<h3 id=\"问题解答\"><a class=\"markdownIt-Anchor\" href=\"#问题解答\">#</a> 问题解答</h3>\n<ul>\n<li>语法：import export （注意有无 default）</li>\n<li>环境：babel 编译 ES6 语法，模块化可用 webpack 和 rollup</li>\n<li>扩展：说一下自己对模块化标准统一的期待</li>\n</ul>\n<h2 id=\"2-2-class-和-普通构造函数有何区别\"><a class=\"markdownIt-Anchor\" href=\"#2-2-class-和-普通构造函数有何区别\">#</a> 2-2 Class 和 普通构造函数有何区别</h2>\n<blockquote>\n<p>Class 和 普通构造函数有何区别</p>\n<p><a href=\"http://zxinc520.com/lcj/%225cd03896bd482e21ac46a9d4%22\">我的博客：React 学习第二天：了解 class</a></p>\n</blockquote>\n<h3 id=\"知识点-2\"><a class=\"markdownIt-Anchor\" href=\"#知识点-2\">#</a> 知识点</h3>\n<ul>\n<li>JS 构造函数</li>\n<li>Class 基本语法</li>\n<li>语法糖</li>\n<li>继承</li>\n</ul>\n<h3 id=\"问题解答-2\"><a class=\"markdownIt-Anchor\" href=\"#问题解答-2\">#</a> 问题解答</h3>\n<ul>\n<li>Class 和 普通构造函数 有何区别 ？\n<ul>\n<li>Class 在语法上更加贴合面向对象的写法</li>\n<li>Class 实现继承更加易读、易理解</li>\n<li>更易于写 java 等后端语言的使用</li>\n<li>本质还是语法糖， 使用 prototype</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-3-promise-的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#2-3-promise-的基本使用\">#</a> 2-3 Promise 的基本使用</h2>\n<h3 id=\"promise-的基本使用\"><a class=\"markdownIt-Anchor\" href=\"#promise-的基本使用\">#</a> Promise 的基本使用</h3>\n<blockquote>\n<p>可参考我的博客：<a href=\"http://zxinc520.com/lcj/%225cbb3bf05733fa0a66088c80%22\">Promise 详细分析</a></p>\n</blockquote>\n<ul>\n<li>Callback Hell</li>\n<li>Promise 语法</li>\n</ul>\n<h4 id=\"callback-hell\"><a class=\"markdownIt-Anchor\" href=\"#callback-hell\">#</a> Callback Hell</h4>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">src<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">,</span> fail</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">fail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n  img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span>\n  <span class=\"token string\">\"https://edu-image.nosdn.127.net/B34DC36428D2D51B8EF5EE2C83CE9BF2.png?imageView&amp;thumbnail=241y34&amp;quality=100\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span>\n  src<span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"promise-语法\"><a class=\"markdownIt-Anchor\" href=\"#promise-语法\">#</a> Promise 语法</h4>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">src</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> promise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">var</span> img <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n    img<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> promise<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">var</span> src <span class=\"token operator\">=</span>\n  <span class=\"token string\">\"https://edu-image.nosdn.127.net/B34DC36428D2D51B8EF5EE2C83CE9BF2.png?imageView&amp;thumbnail=241y34&amp;quality=100\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">loadImg</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresult<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"faild\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresult<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">img</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"问题解答-3\"><a class=\"markdownIt-Anchor\" href=\"#问题解答-3\">#</a> 问题解答</h3>\n<ul>\n<li>Promise 的基本使用和原理？\n<ul>\n<li>new Promise 实例，而且要 return</li>\n<li>new Promise 时要传入函数，函数有 resolve, reject 两个参数</li>\n<li>成功时执行 resolve () 失败时执行 reject ()</li>\n<li>then 监听结果</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-4-总结一下-es6-其它常用功能\"><a class=\"markdownIt-Anchor\" href=\"#2-4-总结一下-es6-其它常用功能\">#</a> 2-4 总结一下 ES6 其它常用功能</h2>\n<h3 id=\"知识点-3\"><a class=\"markdownIt-Anchor\" href=\"#知识点-3\">#</a> 知识点</h3>\n<ul>\n<li>let/const</li>\n<li>多行字符串 / 模板变量</li>\n<li>解构赋值</li>\n<li>块级作用域</li>\n<li>函数默认参数</li>\n<li>箭头函数</li>\n</ul>\n<h4 id=\"letconst\"><a class=\"markdownIt-Anchor\" href=\"#letconst\">#</a> let/const</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/IjRCPysI3ja5.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"多行字符串模板变量\"><a class=\"markdownIt-Anchor\" href=\"#多行字符串模板变量\">#</a> 多行字符串 / 模板变量</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/cmkreCVTvB3f.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"解构赋值\"><a class=\"markdownIt-Anchor\" href=\"#解构赋值\">#</a> 解构赋值</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/tkv3jll7XPJG.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"块级作用域\"><a class=\"markdownIt-Anchor\" href=\"#块级作用域\">#</a> 块级作用域</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/vqFw5Cyt1Okg.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"函数默认参数\"><a class=\"markdownIt-Anchor\" href=\"#函数默认参数\">#</a> 函数默认参数</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/rDHBLwq6djzQ.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"箭头函数\"><a class=\"markdownIt-Anchor\" href=\"#箭头函数\">#</a> 箭头函数</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/26aXyJj3eE8M.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190804/XppPYlgRUceY.png?imageslim\" alt=\"mark\"></p>\n",
            "tags": [
                "ES6 模块化语法",
                "babel",
                "webpack",
                "rollup",
                "ES6"
            ]
        }
    ]
}