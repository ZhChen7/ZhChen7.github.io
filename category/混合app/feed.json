{
    "version": "https://jsonfeed.org/version/1",
    "title": "sunflower • All posts by \"混合app\" category",
    "description": "周琛的博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2019/08/29/hybrid/",
            "url": "http://example.com/2019/08/29/hybrid/",
            "title": "hybrid",
            "date_published": "2019-08-29T07:53:28.000Z",
            "content_html": "<h1 id=\"hybrid\"><a class=\"markdownIt-Anchor\" href=\"#hybrid\">#</a> hybrid</h1>\n<blockquote>\n<p>本章主要介绍 hybrid 的原理和应用。hybrid 基础部分要讲解 file 协议、webview、更新上线流程；另外，通过 h5 和 hybrid 的对比，来了解两者的异同和使用场景；最后讲解前端 JS 和客户端的通讯，包括通讯原理和 JS-bridge 的代码封装。…</p>\n<p>社会主流 <strong>大前端</strong> 的概念。</p>\n<p><strong>知识点</strong></p>\n<p>6-1 hybrid 是什么？ 为何用 hybrid ？</p>\n<p>6-2 hybrid 更新上线流程</p>\n<p>6-3 hybrid 和 h5 的 主要区别？</p>\n<p>6-4 前端 JS 和 客户端 如何通讯？</p>\n<p>The greatest test of courage on earth is to bear defeat without losing heart.</p>\n<p>世界上对勇气的最大考验是忍受失败而不丧失信心。</p>\n</blockquote>\n<h3 id=\"hybrid-2\"><a class=\"markdownIt-Anchor\" href=\"#hybrid-2\">#</a> hybrid</h3>\n<ul>\n<li>移动端占大部分流量，已经远远超过 PC</li>\n<li>一线互联网公司都有自己的 App</li>\n<li>这些 App 中有很大比例的前端代码 (不要惊讶)</li>\n<li>拿微信举例，你每天浏览微信的内容，多少是前端？</li>\n</ul>\n<h3 id=\"知识点\"><a class=\"markdownIt-Anchor\" href=\"#知识点\">#</a> 知识点</h3>\n<ul>\n<li>hybrid 是什么？ 为何用 hybrid ？</li>\n<li>介绍一下 hybrid 更新 和上线的流程？</li>\n<li>hybrid 和 h5 的 主要区别？</li>\n<li>前端 JS 和 客户端 如何通讯？</li>\n</ul>\n<h2 id=\"6-1-hybrid-是什么-为何用-hybrid\"><a class=\"markdownIt-Anchor\" href=\"#6-1-hybrid-是什么-为何用-hybrid\">#</a> 6-1 hybrid 是什么？ 为何用 hybrid ？</h2>\n<h3 id=\"知识点-2\"><a class=\"markdownIt-Anchor\" href=\"#知识点-2\">#</a> 知识点</h3>\n<ul>\n<li>hybrid 文字解释</li>\n<li>存在价值，为何用 hybrid ？</li>\n<li>webview</li>\n<li>file：// 协议</li>\n<li>hybrid 实现流程</li>\n</ul>\n<h4 id=\"hybrid-文字解释\"><a class=\"markdownIt-Anchor\" href=\"#hybrid-文字解释\">#</a> hybrid 文字解释</h4>\n<ul>\n<li>hybrid 即 “混合” ，即 前端 和客户端的混合开发</li>\n<li>需前端开发人员 和 客户端开发人员配合完成</li>\n<li>某些环节也可能涉及到 server 端</li>\n<li>注意：不要以为自己是前端就可以不理会客户端的知识</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/no77eoeMXoEi.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"hybrid-存在价值\"><a class=\"markdownIt-Anchor\" href=\"#hybrid-存在价值\">#</a> hybrid 存在价值</h4>\n<ul>\n<li>可以快速迭代更新【关键】（无需 app 审核，思考为何？–&gt; 前端部分能够快速更新上线）</li>\n<li>体验流畅 （ 和 NA 的体验基本类似 ）</li>\n<li>减少开发和沟通成本，双端公用一套代码</li>\n</ul>\n<h4 id=\"webview\"><a class=\"markdownIt-Anchor\" href=\"#webview\">#</a> webview</h4>\n<ul>\n<li>是 App 中的一个组件（app 可以有 webview，也可以没有）</li>\n<li>用于加载 h5 页面，即一个小型的浏览器 内核</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/I797MG2jf2xe.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"file-协议\"><a class=\"markdownIt-Anchor\" href=\"#file-协议\">#</a> file 协议</h4>\n<ul>\n<li>其实在一开始接触 html 开发，就已经使用了 file 协议</li>\n<li>只不过你当时没有 “协议” “标准” 等这些概念</li>\n<li>再次强调 “协议” “标准” 的重要性 ！！！</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/kyXpWyLb4oVR.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/cxJ86AeO2374.png?imageslim\" alt=\"mark\"></p>\n<p><em>两者的区别：</em></p>\n<ul>\n<li>file 协议：本地文件，快</li>\n<li>http (s) 协议：网络加载，慢</li>\n</ul>\n<h4 id=\"hybrid-具体实现\"><a class=\"markdownIt-Anchor\" href=\"#hybrid-具体实现\">#</a> hybrid 具体实现</h4>\n<ul>\n<li>不是所有的场景都适合使用 hybrid</li>\n<li>使用 <strong>NA</strong> ：体验要求极致，变化不频繁（ 如头条的首页 ）</li>\n<li>使用 <strong>hybrid</strong> ：体验要求高，变化频繁（ 如头条的新闻详情页 ）</li>\n<li>使用 <strong>h5</strong> ：体验无要求，不常用（如举报、反馈等页面）</li>\n</ul>\n<p><strong>具体实现</strong>：</p>\n<ul>\n<li>前端 做好静态页面（html css js），将文件交给客户端</li>\n<li>客户端拿到前端静态页面，以文件形式储存在 app 中</li>\n<li>客户端 在一个 webview 中</li>\n<li>使用 file 协议 加载静态页面</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/RIR0zOPUN22I.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"具体实现-遗留问题\"><a class=\"markdownIt-Anchor\" href=\"#具体实现-遗留问题\">#</a> 具体实现 – 遗留问题：</h4>\n<ul>\n<li>app 发布之后，静态文件如何实时更新？</li>\n<li>静态页面如何获取内容？</li>\n</ul>\n<h3 id=\"问题解答\"><a class=\"markdownIt-Anchor\" href=\"#问题解答\">#</a> 问题解答</h3>\n<ul>\n<li>hybrid 是什么？ 为何用 hybrid ？\n<ul>\n<li>hybrid 即 “混合” ，即 前端 和客户端的混合开发</li>\n<li>hybrid 存在的核心意义在于快速迭代，无需审核</li>\n<li>hybrid 实现流程（图），以及 webview 和 file 协议</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-2-hybrid-更新上线流程\"><a class=\"markdownIt-Anchor\" href=\"#6-2-hybrid-更新上线流程\">#</a> 6-2 hybrid 更新上线流程</h2>\n<ul>\n<li>回顾 hybrid 实现流程</li>\n<li>思考 （目的，实现途径）</li>\n<li>更新流程</li>\n</ul>\n<h4 id=\"回顾-hybrid-实现流程\"><a class=\"markdownIt-Anchor\" href=\"#回顾-hybrid-实现流程\">#</a> 回顾 hybrid 实现流程</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/aeHMDopqsrCy.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"思考-目的实现途径\"><a class=\"markdownIt-Anchor\" href=\"#思考-目的实现途径\">#</a> 思考 （目的，实现途径）</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/wCDenA4EGmC8.png?imageslim\" alt=\"mark\"></p>\n<ul>\n<li>要替换每个客户端的静态文件</li>\n<li>只能客户端来做（客户端是我们开发的）</li>\n<li>客户端去 server 下载最新的静态文件</li>\n<li>我们维护 server 的静态文件</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/H6H3arUgJB6d.png?imageslim\" alt=\"mark\"></p>\n<p><em>完整流程：</em></p>\n<ul>\n<li>分版本，有版本号，如 201803211015</li>\n<li>将静态 文件压缩成 zip 包，上传到服务器</li>\n<li>客户端每次启动，都去服务端检查版本号</li>\n<li>如果服务端本版本号大于客户端版本号，就去下载最新的 zip 包</li>\n<li>下载完之后解压包，然后将现有的文件覆盖</li>\n</ul>\n<h3 id=\"问题解答-2\"><a class=\"markdownIt-Anchor\" href=\"#问题解答-2\">#</a> 问题解答</h3>\n<ul>\n<li>介绍一下 hybrid 更新 和上线的流程？\n<ul>\n<li>掌握流程图</li>\n<li>要点 1：服务端的版本和 zip 包维护</li>\n<li>要点 2：更新 zip 包之前，先对比版本号</li>\n<li>要点 3：zip 下载解压和覆盖</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-3hybrid-和-h5-的-主要区别\"><a class=\"markdownIt-Anchor\" href=\"#6-3hybrid-和-h5-的-主要区别\">#</a> 6-3hybrid 和 h5 的 主要区别？</h2>\n<h3 id=\"知识点-3\"><a class=\"markdownIt-Anchor\" href=\"#知识点-3\">#</a> 知识点</h3>\n<ul>\n<li>优点</li>\n<li>缺点</li>\n<li>适用的场景</li>\n</ul>\n<h4 id=\"hybrid-优点\"><a class=\"markdownIt-Anchor\" href=\"#hybrid-优点\">#</a> hybrid 优点</h4>\n<ul>\n<li>体验更好，跟 NA 体验基本一致</li>\n<li>可快速迭代，无需 app 审核 【关键】</li>\n</ul>\n<h4 id=\"hybrid-缺点\"><a class=\"markdownIt-Anchor\" href=\"#hybrid-缺点\">#</a> hybrid 缺点</h4>\n<ul>\n<li>开发成本高。联调，测试，查 bug 都比较麻烦</li>\n<li>运维成本高。参考此前讲过的更新上线的流程</li>\n</ul>\n<h4 id=\"适用场景\"><a class=\"markdownIt-Anchor\" href=\"#适用场景\">#</a> 适用场景</h4>\n<ul>\n<li>hybrid ：产品的稳定功能，体验要求高，迭代频繁</li>\n<li>h5：单次的运营活动（如 xx 红包）或 不常用功能（反馈、举报页面等）</li>\n</ul>\n<h3 id=\"问题解答-3\"><a class=\"markdownIt-Anchor\" href=\"#问题解答-3\">#</a> 问题解答</h3>\n<ul>\n<li>hybrid 和 h5 的 主要区别？\n<ul>\n<li>优点：体验好，可快速迭代</li>\n<li>缺点：开发成本高，运维成本高</li>\n<li>适用的场景：hybrid 适合产品型，h5 适合 运行型</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-4-前端-js-和-客户端-如何通讯\"><a class=\"markdownIt-Anchor\" href=\"#6-4-前端-js-和-客户端-如何通讯\">#</a> 6-4 前端 JS 和 客户端 如何通讯？</h2>\n<h3 id=\"知识点-4\"><a class=\"markdownIt-Anchor\" href=\"#知识点-4\">#</a> 知识点</h3>\n<ul>\n<li>回顾 之前遗留的问题</li>\n<li>JS 和 客户端通讯的基本形式</li>\n<li>schema 协议简介和使用</li>\n<li>schema 使用的封装</li>\n<li>内置上线</li>\n</ul>\n<h4 id=\"之前遗留的问题\"><a class=\"markdownIt-Anchor\" href=\"#之前遗留的问题\">#</a> 之前遗留的问题</h4>\n<ul>\n<li>新闻详情页适用于 hybrid，前端如何 获取新闻内容 ？\n<ul>\n<li>不能用 ajax （http (s) 协议）获取。第一： 跨域 ，第二 ：速度慢</li>\n<li>客户端获取新闻内容，然后 JS 通讯拿到内容，再渲染</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/MIj2ETWq9QH1.png?imageslim\" alt=\"mark\"></p>\n<p><em>JS 和 客户端通讯的基本形式</em> ：</p>\n<ul>\n<li>JS 访问客户端能力，传递参数 和 回调函数</li>\n<li>客户端 通过 回调函数 返回内容</li>\n</ul>\n<h4 id=\"schema-协议简介和使用\"><a class=\"markdownIt-Anchor\" href=\"#schema-协议简介和使用\">#</a> schema 协议简介和使用</h4>\n<ul>\n<li>之前介绍了 http (s) 和 file 协议</li>\n<li>schema 协议 —— 前端和客户端通讯的约定</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/w3OphLjO8erc.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/QpzXgisk6E3y.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/RjgtefgjYzXH.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"模拟扫一扫前后端通讯\"><a class=\"markdownIt-Anchor\" href=\"#模拟扫一扫前后端通讯\">#</a> 模拟扫一扫前后端通讯</h4>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>扫一扫<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">function</span> <span class=\"token function\">invokeScan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        window<span class=\"token punctuation\">[</span><span class=\"token string\">\"_invoke_scan_callback_\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> iframe <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iframe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        iframe<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// iframe.src = 'weixin://dl/scan'  //重要</span>\n        iframe<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span>\n          <span class=\"token string\">\"weixin://dl/scan?k1=v1&amp;k2=v2&amp;k3=v3&amp;callback=_invoke_scan_callback_\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n        body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          iframe <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">invokeScan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"schema-使用的封装\"><a class=\"markdownIt-Anchor\" href=\"#schema-使用的封装\">#</a> schema 使用的封装</h4>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/jcvC6T5SH3Pm.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/fW8NCvLoYRAg.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190829/5Yhq6r9uLr7X.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"schema-封装代码\"><a class=\"markdownIt-Anchor\" href=\"#schema-封装代码\">#</a> schema 封装代码</h4>\n<p><em>schema 使用的封装</em> ：</p>\n<pre class=\"line-numbers language-html\" data-language=\"html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>扫一扫<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>分享<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>invoke.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token comment\">//调用扫一扫</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        window<span class=\"token punctuation\">.</span>invoke<span class=\"token punctuation\">.</span><span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">//调用分享</span>\n      document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"btn2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        window<span class=\"token punctuation\">.</span>invoke<span class=\"token punctuation\">.</span><span class=\"token function\">share</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">&#123;</span>\n            title<span class=\"token operator\">:</span> <span class=\"token string\">\"xxx\"</span><span class=\"token punctuation\">,</span>\n            content<span class=\"token operator\">:</span> <span class=\"token string\">\"yyy\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">relust</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>relust<span class=\"token punctuation\">.</span>error <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"分享成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n              <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>relust<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n          <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><em>invoke.js</em> ：</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// invoke.js</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">window<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">//调用 schema 的封装</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">_invoke</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">action<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//拼装 schema 协议</span>\n    <span class=\"token keyword\">var</span> schema <span class=\"token operator\">=</span> <span class=\"token string\">\"myapp://utils/\"</span> <span class=\"token operator\">+</span> action<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//拼接参数</span>\n    schema <span class=\"token operator\">+=</span> <span class=\"token string\">\"?a=a\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> key<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>key <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        schema <span class=\"token operator\">+=</span> <span class=\"token string\">\"&amp;\"</span> <span class=\"token operator\">+</span> key <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//处理 callback</span>\n    <span class=\"token keyword\">var</span> callbackName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> callback <span class=\"token operator\">===</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      callbackName <span class=\"token operator\">=</span> callback<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      callbackName <span class=\"token operator\">=</span> action <span class=\"token operator\">+</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      window<span class=\"token punctuation\">[</span>callbackName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> callback<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    schema <span class=\"token operator\">+=</span> <span class=\"token string\">\"callback=callbackName\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//触发</span>\n    <span class=\"token keyword\">var</span> iframe <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"iframe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    iframe<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">;</span>\n    iframe<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> schema<span class=\"token punctuation\">;</span> <span class=\"token comment\">//重要</span>\n    <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">;</span>\n    body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>iframe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      iframe <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">//暴露到全局变量</span>\n  window<span class=\"token punctuation\">.</span>invoke <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function-variable function\">share</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">_invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"share\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">scan</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">_invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scan\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">login</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">_invoke</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"login\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> callback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"问题解答-4\"><a class=\"markdownIt-Anchor\" href=\"#问题解答-4\">#</a> 问题解答</h3>\n<ul>\n<li>前端 JS 和 客户端 如何通讯？\n<ul>\n<li>通讯的基本形式：调用能力，传递参数，监听回调</li>\n<li>对 schema 协议的理解和使用 （这个协议可理解为 ：定义了前端和客户端 通信的一个标准）</li>\n<li>调用 schema 代码的封装</li>\n<li>内置上线的好处：更快、更安全</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "hybrid"
            ]
        },
        {
            "id": "http://example.com/2019/08/04/IntroductionToCourse/",
            "url": "http://example.com/2019/08/04/IntroductionToCourse/",
            "title": "课程导论",
            "date_published": "2019-08-04T08:44:08.000Z",
            "content_html": "<h1 id=\"课程导论\"><a class=\"markdownIt-Anchor\" href=\"#课程导论\">#</a> 课程导论</h1>\n<blockquote>\n<p>课程导论：本章主要介绍课程的知识大纲，每个章节的解决顺序和主要内容。</p>\n<p>1- 1 导学</p>\n<p>1-2 课程重要提示</p>\n<p>1-3 架构</p>\n</blockquote>\n<h2 id=\"课程概述\"><a class=\"markdownIt-Anchor\" href=\"#课程概述\">#</a> 课程概述</h2>\n<blockquote>\n<p><strong>做什么？</strong> —— 讲解前端 JS 高级面试题</p>\n<p><strong>哪些部分？</strong> —— 高级基础，框架原理，app 混合开发</p>\n<p><strong>技术？</strong> ——JS、ES6、虚拟 DOM、vueReact、hybrid</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190803/Q5w2nr68extL.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"课程安排\"><a class=\"markdownIt-Anchor\" href=\"#课程安排\">#</a> 课程安排</h3>\n<ul>\n<li>高级基础</li>\n<li>框架原理</li>\n<li>App 混合开发</li>\n<li>热爱编程</li>\n</ul>\n<h4 id=\"课程安排-高级基础\"><a class=\"markdownIt-Anchor\" href=\"#课程安排-高级基础\">#</a> 课程安排 - 高级基础</h4>\n<ul>\n<li>ES6 常用语法：Class ,Module Promise 等</li>\n<li>原型高级应用：结合 jQuery 和 zepto 源码</li>\n<li>异步全面讲解：从原理到 jQuery 再到 Primise</li>\n</ul>\n<h4 id=\"课程安排-框架原理\"><a class=\"markdownIt-Anchor\" href=\"#课程安排-框架原理\">#</a> 课程安排 - 框架原理</h4>\n<ul>\n<li>虚拟 DOM：存在价值，如何使用，diff 算法</li>\n<li>vue：MVVM，vue 响应式、模板解析、渲染</li>\n<li>React：组件化，JSX、VDOM，setState</li>\n<li>对比：有主见，自圆其说</li>\n</ul>\n<h4 id=\"课程安排-app-混合开发\"><a class=\"markdownIt-Anchor\" href=\"#课程安排-app-混合开发\">#</a> 课程安排 - App 混合开发</h4>\n<ul>\n<li>hybrid：基础、和 h5 对比，上线流程</li>\n<li>通讯：通讯原理，JS-Bridge 封装</li>\n</ul>\n<h4 id=\"课程安排-热爱编程\"><a class=\"markdownIt-Anchor\" href=\"#课程安排-热爱编程\">#</a> 课程安排 - 热爱编程</h4>\n<ul>\n<li>读书</li>\n<li>博客</li>\n<li>开源</li>\n</ul>\n<h3 id=\"课程收获\"><a class=\"markdownIt-Anchor\" href=\"#课程收获\">#</a> 课程收获</h3>\n<ul>\n<li>应对 JS 高级面试题</li>\n<li>从深度和广度都扩充了自己的知识体系</li>\n<li>学会如何高效学习</li>\n<li>深入理解常用框架的实现原理和 hybrid 应用</li>\n</ul>\n<h3 id=\"学习前提\"><a class=\"markdownIt-Anchor\" href=\"#学习前提\">#</a> 学习前提</h3>\n<ul>\n<li>有 JavaScript 基础</li>\n<li>用过 node.js 和 npm 开发环境</li>\n<li>了解 vue 和 React （至少看过文档，做过 demo）</li>\n<li>热爱前端开发，有学习的欲望</li>\n</ul>\n<h3 id=\"课程优势\"><a class=\"markdownIt-Anchor\" href=\"#课程优势\">#</a> 课程优势</h3>\n<ul>\n<li>针对高级 JS 面试中，面试官爱问 “源码” “实现”</li>\n<li>介绍常用框架实现原理的视频，网上稀缺</li>\n<li>会介绍 hybrid 原理和应用的视频，网上稀缺</li>\n<li>全部由实际工作经验总结而来，书上看不到</li>\n</ul>\n",
            "tags": [
                "hybrid",
                "虚拟 DOM",
                "知识点概述"
            ]
        }
    ]
}