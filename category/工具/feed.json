{
    "version": "https://jsonfeed.org/version/1",
    "title": "sunflower • All posts by \"工具\" category",
    "description": "周琛的博客",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2019/10/10/regular_expression/",
            "url": "http://example.com/2019/10/10/regular_expression/",
            "title": "正则表达式",
            "date_published": "2019-10-10T06:19:47.000Z",
            "content_html": "<h1 id=\"正则表达式\"><a class=\"markdownIt-Anchor\" href=\"#正则表达式\">#</a> 正则表达式</h1>\n<blockquote>\n<p>正则表达式是用于匹配字符串中字符组合的模式。在 JavaScript 中，正则表达式也是对象。这些模式被用于 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/RegExp\"> <code>RegExp</code> </a> 的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"> <code>exec</code> </a> 和 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"> <code>test</code> </a> 方法，以及 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/String\"> <code>String</code> </a> 的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match\"> <code>match</code> </a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll\"> <code>matchAll</code> </a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"> <code>replace</code> </a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search\"> <code>search</code> </a> 和 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split\"> <code>split</code> </a> 方法。本章介绍 JavaScript <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions\">正则表达式</a>。</p>\n</blockquote>\n<p>辅助正则可视化网站：<a href=\"https://regexper.com/\">https://regexper.com/</a></p>\n<p><strong>使用正则表达式的方法</strong></p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\"> <code>exec</code> </a></td>\n<td>一个在字符串中执行查找匹配的 RegExp 方法，它返回一个数组（未匹配到则返回 null）。</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"> <code>test</code> </a></td>\n<td>一个在字符串中测试是否匹配的 RegExp 方法，它返回 true 或 false。</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match\"> <code>match</code> </a></td>\n<td>一个在字符串中执行查找匹配的 String 方法，它返回一个数组，在未匹配到时会返回 null。</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll\"> <code>matchAll</code> </a></td>\n<td>一个在字符串中执行查找所有匹配的 String 方法，它返回一个迭代器（iterator）。</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search\"> <code>search</code> </a></td>\n<td>一个在字符串中测试匹配的 String 方法，它返回匹配到的位置索引，或者在失败时返回 - 1。</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace\"> <code>replace</code> </a></td>\n<td>一个在字符串中执行查找匹配的 String 方法，并且使用替换字符串替换掉匹配到的子字符串。</td>\n</tr>\n<tr>\n<td><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split\"> <code>split</code> </a></td>\n<td>一个使用正则表达式或者一个固定字符串分隔一个字符串，并将分隔后的子字符串存储到数组中的  <code>String</code>  方法。</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"regexp-对象\"><a class=\"markdownIt-Anchor\" href=\"#regexp-对象\">#</a> REGEXP 对象</h2>\n<ul>\n<li>JavaScript 通过内置函数对象 RegExp 支持正则表达式</li>\n<li>有两种方法实例化 RegExp 对象\n<ul>\n<li>字面量</li>\n<li>构造函数</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"字面量\"><a class=\"markdownIt-Anchor\" href=\"#字面量\">#</a> 字面量</h3>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> reg <span class=\"token operator\">=</span> <span class=\"token regex\">/\\bis\\b/g</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"he is dog ,he love she how are you is\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">,</span> <span class=\"token string\">\"IS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// he IS dog ,he love she how are you IS</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"构造函数\"><a class=\"markdownIt-Anchor\" href=\"#构造函数\">#</a> 构造函数</h3>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> reg <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\bis\\\\b\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"he is dog ,he love she how are you is\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">,</span> <span class=\"token string\">\"IS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// he IS dog ,he love she how are you IS</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"修饰符\"><a class=\"markdownIt-Anchor\" href=\"#修饰符\">#</a> 修饰符</h4>\n<p>在 JavaScript 中，<strong>正则表达式标志</strong>：</p>\n<ul>\n<li>\n<p><code>i</code></p>\n<p>不区分大小写搜索。</p>\n</li>\n<li>\n<p><code>g</code></p>\n<p>全局搜索。</p>\n</li>\n<li>\n<p><code>m</code></p>\n<p>多行搜索。</p>\n</li>\n<li>\n<p><code>u</code></p>\n<p>使用 unicode 码的模式进行匹配。</p>\n</li>\n<li>\n<p><code>y</code></p>\n<p>执行 “粘性” 搜索，匹配从目标字符串的当前位置开始，可以使用 y 标志。</p>\n</li>\n<li>\n<p><code>s</code></p>\n<p>允许  <code>.</code>  匹配换行符。</p>\n</li>\n</ul>\n<h4 id=\"元字符\"><a class=\"markdownIt-Anchor\" href=\"#元字符\">#</a> 元字符</h4>\n<ul>\n<li>正则表达式由两种基本字符类型组成：\n<ul>\n<li>原义文本字符</li>\n<li>元字符</li>\n</ul>\n</li>\n<li>元字符是在正则表达式中有特殊含义的非字母字符</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>元字符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\</td>\n<td>将下一个字符标记为特殊字符或字面值。例如，n 匹配字符 <em>n</em>，而 \\n 匹配换行符。序列 \\ 匹配 \\，而 ( 匹配 (。</td>\n</tr>\n<tr>\n<td>^</td>\n<td>匹配输入的开始部分。</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配输入的结束部分。</td>\n</tr>\n<tr>\n<td>*</td>\n<td>零次或更多次匹配前面的字符。例如，zo* 匹配 <em>z</em> 或 *zoo*。</td>\n</tr>\n<tr>\n<td>+</td>\n<td>一次或更多次匹配前面的字符。例如，zo+ 匹配 <em>zoo</em>，但是不匹配 <em>z</em>。</td>\n</tr>\n<tr>\n<td>?</td>\n<td>零次或一次匹配前面的字符。例如，a?ve? 匹配 <em>never</em> 中的 <em>ve</em>。</td>\n</tr>\n<tr>\n<td>.</td>\n<td>匹配任何单个字符，但换行符除外。</td>\n</tr>\n<tr>\n<td>(pattern)</td>\n<td>匹配模式并记住匹配项。通过使用以下代码，匹配的子串可以检索自生成的匹配项集合：Item [0]…[n]。要匹配圆括号字符 ( )，请使用 ( 或 )。</td>\n</tr>\n<tr>\n<td>x|y</td>\n<td>匹配 x 或 y。 例如，z|wood 匹配 <em>z</em> 或 <em>wood</em>。(z|w) oo 匹配 <em>zoo</em> 或 <em>wood</em>。</td>\n</tr>\n<tr>\n<td n=\"\"></td>\n<td>n 是一个非负整数。精确匹配 n 次。例如，o {2} 不匹配 <em>Bob</em> 中的 <em>o</em>，但是匹配 <em>foooood</em> 中的前两个 <em>o</em>。</td>\n</tr>\n<tr>\n<td n,=\"\"></td>\n<td>在此表达式中，n 是一个非负整数。至少 n 次匹配前面的字符。例如，o {2,} 不匹配 <em>Bob</em> 中的 <em>o</em>，但是匹配 <em>foooood</em> 中的所有 <em>o</em>。o {1,} 表达式等效于 o+，o {0,} 等效于 o*。</td>\n</tr>\n<tr>\n<td n,m=\"\"></td>\n<td>m 和 n 变量是非负整数。至少 n 次且至多 m 次匹配前面的字符。例如，o {1,3} 匹配 <em>fooooood</em> 中的前三个 <em>o</em>。o {0,1} 表达式等效于 o?。</td>\n</tr>\n<tr>\n<td>[xyz]</td>\n<td>一个字符集。匹配任意一个包含的字符。例如，[abc] 匹配 <em>plain</em> 中的 <em>a</em>。</td>\n</tr>\n<tr>\n<td>[^xyz]</td>\n<td>一个否定字符集。匹配任何未包含的字符。例如，[^abc] 匹配 <em>plain</em> 中的 <em>p</em>。</td>\n</tr>\n<tr>\n<td>[a-z]</td>\n<td>字符范围。匹配指定范围中的任何字符。例如，[a-z] 匹配英语字母中的任何小写的字母字符。</td>\n</tr>\n<tr>\n<td>[^m-z]</td>\n<td>一个否定字符范围。匹配未在指定范围中的任何字符。例如，[m-z] 匹配未在范围 <em>m</em> 到 <em>z</em> 之间的任何字符。</td>\n</tr>\n<tr>\n<td>\\A</td>\n<td>仅匹配字符串的开头。</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>匹配某个单词边界，即，某个单词和空格之间的位置。例如，er\\b 匹配 <em>never</em> 中的 <em>er</em>，但是不匹配 <em>verb</em> 中的 <em>er</em>。</td>\n</tr>\n<tr>\n<td>\\B</td>\n<td>匹配非单词边界。ea*r\\B 表达式匹配 <em>never early</em> 中的 *ear*。</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>匹配数字字符。</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>匹配非数字字符。</td>\n</tr>\n<tr>\n<td>\\f</td>\n<td>匹配换页字符。</td>\n</tr>\n<tr>\n<td>\\n</td>\n<td>匹配换行符。</td>\n</tr>\n<tr>\n<td>\\r</td>\n<td>匹配回车字符。</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配任何空格，包括空白、制表符、换页字符等等。</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>匹配任何非空格字符。</td>\n</tr>\n<tr>\n<td>\\t</td>\n<td>匹配跳进字符。</td>\n</tr>\n<tr>\n<td>\\v</td>\n<td>匹配垂直跳进字符。</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配任何单词字符，包括下划线。此表达式等效于 [A-Za-z0-9_]。</td>\n</tr>\n<tr>\n<td>\\W</td>\n<td>匹配任何非单词字符。此表达式等效于 [^a-za-z0-9__]。</td>\n</tr>\n<tr>\n<td>\\z</td>\n<td>仅匹配字符串的结尾。</td>\n</tr>\n<tr>\n<td>\\Z</td>\n<td>仅匹配字符串的结尾，或者结尾的换行符之前。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>字符类：</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"a1b2c3d4\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[abc]/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"X\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"X1X2X3d4\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"a1b2c3d4\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[^abc]/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"X\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"aXbXcXXX\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>范围类：</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"a1b2c3d4zcczx\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[a-z]/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"Q1Q2Q3Q4QQQQQ\"</span>\n\n<span class=\"token string\">\"a1b2c3d4zcczxAAAAAAA\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[a-zA-Z]/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"Q1Q2Q3Q4QQQQQQQQQQQQ\"</span>\n\n<span class=\"token string\">\"2016-09-12\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[0-9]/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"AAAA-AA-AA\"</span>\n\n<span class=\"token string\">\"2016-09-12\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/[0-9-]/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"AAAAAAAAAA\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>预定义类：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20191009/FsMlDwV4Kfrh.png?imageslim\" alt=\"mark\"></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">//匹配一个 ab + 数字 + 任意字符 的字符串</span>\nab\\d<span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>边界：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20191009/UQyV6XeWDuqI.png?imageslim\" alt=\"mark\"></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"this is a boy\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\bis\\b/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"IS\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"this IS a boy\"</span>\n\n<span class=\"token string\">\"@13@12331\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/@./g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"Q3Q2331\"</span>\n\n<span class=\"token string\">\"@13@12331\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/^@./g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"Q3@12331\"</span>\n\n<span class=\"token string\">\"@13@12331@\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/.@$/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Q\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"@13@1233Q\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>量词：</strong></p>\n<p><img src=\"http://static.zxinc520.com/blog/20191009/KsjXw8IGYwJD.png?imageslim\" alt=\"mark\"></p>\n<p><strong>贪婪模式：</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"12345678\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\d&#123;3,6&#125;/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"a78\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>非贪婪模式：</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"12345678\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\d&#123;3,6&#125;?/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"aa78\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>分组：</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"a1b2c3d4\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/([a-zA-z]\\d)&#123;3&#125;/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"Ad4\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>或：</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"123456789122312\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/(123|456)/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"AA789122312\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>反向引用：</strong></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"2019-10-09\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/(\\d&#123;4&#125;)-(\\d&#123;2&#125;)-(\\d&#123;2&#125;)/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"$3/$2/$1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"09/10/2019\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>前瞻：</strong></p>\n<ul>\n<li>正则表达式从文本头部向尾部开始解析，文本尾部方向，称为 “前”</li>\n<li><strong>前瞻</strong> 就是正则表达式匹配到规则的时候，向前检查是否符合断言，后顾 / 后瞻 方向相反</li>\n<li>JavaScript 不支持 后顾</li>\n<li>符合和不符合特定断言称为 <strong>肯定 / 正向</strong> 匹配 和 <strong>否定 / 负向</strong> 匹配</li>\n</ul>\n<p><img src=\"http://static.zxinc520.com/blog/20191009/VS8ezfIwVH95.png?imageslim\" alt=\"mark\"></p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token string\">\"a2*3\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\">/\\w(?=\\d)/g</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//\"A2*3\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"对象属性\"><a class=\"markdownIt-Anchor\" href=\"#对象属性\">#</a> 对象属性</h3>\n<ul>\n<li>global：是否全文搜索，默认 false</li>\n<li>ignore case：是否大小写敏感，默认是 false</li>\n<li>multiline：多行搜索，默认值是 false</li>\n<li>lastIndex: 是当前表达式匹配内容的最后一个字符的下一个位置</li>\n<li>source：正则表达式的文本字符串</li>\n</ul>\n<h2 id=\"regexpprototypetest\"><a class=\"markdownIt-Anchor\" href=\"#regexpprototypetest\">#</a> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\">RegExp.prototype.test()</a></h2>\n<blockquote>\n<p><code>test()</code>  方法执行一个检索，用来查看正则表达式与指定的字符串是否匹配。返回  <code>true</code>  或  <code>false</code> 。</p>\n</blockquote>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> reg1 <span class=\"token operator\">=</span> <span class=\"token regex\">/\\w/</span><span class=\"token punctuation\">;</span>\nreg1<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//true</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>注意：/g（全局匹配 ） 使用 test 方法，结果不稳定！</p>\n<h2 id=\"regexpprototypeexec\"><a class=\"markdownIt-Anchor\" href=\"#regexpprototypeexec\">#</a> <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\">RegExp.prototype.exec()</a></h2>\n<blockquote>\n<p><code>exec() </code> 方法在一个指定字符串中执行一个搜索匹配。返回一个结果数组或 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/null\"> <code>null</code> </a>。</p>\n<p>如果你只是为了判断是否匹配（true 或 false），可以使用 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\"> <code>RegExp.test()</code> </a> 方法，或者 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search\"> <code>String.search()</code> </a> 方法。</p>\n</blockquote>\n",
            "tags": [
                "正则表达式"
            ]
        },
        {
            "id": "http://example.com/2019/07/12/gitLearning/",
            "url": "http://example.com/2019/07/12/gitLearning/",
            "title": "Git 学习",
            "date_published": "2019-07-12T09:59:30.000Z",
            "content_html": "<h1 id=\"git-学习\"><a class=\"markdownIt-Anchor\" href=\"#git-学习\">#</a> Git 学习</h1>\n<blockquote>\n<p><strong>Git 学习</strong></p>\n<p>Git 的优势</p>\n<p>Git 与 SVN 的主要区别</p>\n<p>安装 Git</p>\n<p>初始化 Git 仓储 /（仓库）</p>\n<p>配置使用者的用户名和邮箱</p>\n<p>把代码 存储到仓库中</p>\n<p>Git 查看日志</p>\n<p>Git 版本回退</p>\n<p>Git 分支的新建与合并</p>\n<p>上传至 github</p>\n<p>通过 ssh 方式 上传 代码</p>\n<p>push 和 pull 简写</p>\n</blockquote>\n<h3 id=\"什么是-git\"><a class=\"markdownIt-Anchor\" href=\"#什么是-git\">#</a> 什么是 Git？</h3>\n<blockquote>\n<p>git – fast 版本控制</p>\n<p>Git 是由 “Linux 之父” <strong>Linus Torvalds</strong> 创建的。因为他发现找不到满意的方案来管理 Linux Kernel 联合开发的版本控制，就自己写了 Git。</p>\n<p><a href=\"https://git-scm.com/\">官方网站</a></p>\n</blockquote>\n<ul>\n<li>Git 是一个<a href=\"https://git-scm.com/about/free-and-open-source\">免费的开源</a> 分布式版本控制系统，旨在快速高效地处理从小型到大型项目的所有事务</li>\n<li>Git <a href=\"https://git-scm.com/doc\">易于学习</a>， <a href=\"https://git-scm.com/about/small-and-fast\">占地面积小，具有闪电般快速的性能</a>。它超越了 Subversion，CVS，Perforce 和 ClearCase 等 SCM 工具，具有<a href=\"https://git-scm.com/about/branching-and-merging\">廉价本地分支</a>，便捷的<a href=\"https://git-scm.com/about/staging-area\">临时区域</a>和 <a href=\"https://git-scm.com/about/distributed\">多个工作流程等功能</a>。</li>\n</ul>\n<h3 id=\"git-的优势\"><a class=\"markdownIt-Anchor\" href=\"#git-的优势\">#</a> Git 的优势</h3>\n<p>说到优势，那么自然是相对与 SVN 而言的</p>\n<ol>\n<li>\n<p>** 版本库本地化，支持离线提交，相对独立不影响协同开发。** 每个开发者都拥有自己的版本控制库，在自己的版本库上可以任意的执行提交代码、创建分支等行为。例如，开发者认为自己提交的代码有问题？没关系，因为版本库是自己的，回滚历史、反复提交、归并分支并不会影响到其他开发者。</p>\n</li>\n<li>\n<p>** 更少的 “仓库污染”。**git 对于每个工程只会产生一个.git 目录，这个工程所有的版本控制信息都在这个目录中，不会像 SVN 那样在每个目录下都产生.svn 目录。</p>\n</li>\n<li>\n<p>** 把内容按元数据方式存储，完整克隆版本库。** 所有版本信息位于.git 目录中，它是处于你的机器上的一个克隆版的版本库，它拥有中心版本库上所有的东西，例如标签、分支、版本记录等。</p>\n</li>\n<li>\n<p>** 支持快速切换分支方便合并，比较合并性能好。** 在同一目录下即可切换不同的分支，方便合并，且合并文件速度比 SVN 快。</p>\n</li>\n<li>\n<p>** 分布式版本库，无单点故障，内容完整性好。** 内容存储使用的是 SHA-1 哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。</p>\n</li>\n</ol>\n<h3 id=\"git-与-svn-的主要区别\"><a class=\"markdownIt-Anchor\" href=\"#git-与-svn-的主要区别\">#</a> Git 与 SVN 的主要区别</h3>\n<p>Git 是<strong>分布式</strong> SCM，而 SVN 是基于<strong>服务器</strong>的，也就是说每个开发者本地都有一套 git 库，每个人维护自己的版本（或者合并其他人的版本），而 SVN 是每个人写完代码后都及时的 checkin 到服务器上，进行合并。</p>\n<h3 id=\"安装-git\"><a class=\"markdownIt-Anchor\" href=\"#安装-git\">#</a> 安装 Git</h3>\n<blockquote>\n<p><a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/896067074338496\">廖雪峰的官方网站 git 安装</a></p>\n</blockquote>\n<p>鼠标 <strong>右键</strong>，选中  <code>Git Bash Here</code>  在里面输入相关命令：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/litoDVMJqNVb.png?imageslim\" alt=\"mark\"></p>\n<h2 id=\"使用-git\"><a class=\"markdownIt-Anchor\" href=\"#使用-git\">#</a> 使用 Git</h2>\n<h3 id=\"初始化-git-仓储仓库\"><a class=\"markdownIt-Anchor\" href=\"#初始化-git-仓储仓库\">#</a> 初始化 Git 仓储 /（仓库）</h3>\n<ol>\n<li><strong>新建</strong>一个文件夹</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/9NbV1d2Bf3H2.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"2\">\n<li><strong>进入</strong>文件夹，鼠标<strong>右键</strong> 选中  <code>Git Bash Here</code> ，输入命令  <code>git init</code>  回车。</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/PApIqKpihnsJ.gif\" alt=\"mark\"></p>\n<h3 id=\"配置使用者的用户名和邮箱\"><a class=\"markdownIt-Anchor\" href=\"#配置使用者的用户名和邮箱\">#</a> 配置使用者的用户名和邮箱</h3>\n<blockquote>\n<p>配置使用者的用户名和邮箱 （自报家门）, 每一次备份都会把当前备份者的信息存储起来。</p>\n<p><strong>配置用户名</strong> ：  <code>git config --global user.name &quot;zhouchen&quot;</code></p>\n<p><strong>配置邮箱</strong>：  <code>git config --global user.email &quot;1583741285@qq.com&quot;</code></p>\n</blockquote>\n<ol>\n<li>\n<p>配置使用者的<strong>用户名</strong>：<strong>进入</strong>文件夹，鼠标<strong>右键</strong> 选中  <code>Git Bash Here</code> ，</p>\n<p>输入命令  <code>git config --global user.name &quot;zhouchen&quot;</code>  回车 。</p>\n</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/FUG7gTH6S2Mh.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"2\">\n<li>\n<p>同样的配置使用者的 <strong>邮箱</strong>：<strong>进入</strong>文件夹，鼠标<strong>右键</strong> 选中  <code>Git Bash Here</code> ，</p>\n<p>输入命令  <code>git config --global user.email &quot;1583741285@qq.com&quot;</code>  回车 。</p>\n</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/p62Mz0UPYcY9.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"把代码-存储到仓库中\"><a class=\"markdownIt-Anchor\" href=\"#把代码-存储到仓库中\">#</a> 把代码 存储到仓库中</h3>\n<blockquote>\n<p>把代码 存储到仓库中</p>\n</blockquote>\n<p><strong>需求</strong>：将 <a href=\"http://readme.md\">readme.md</a> 文件 存储到仓库中</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/KwUDn18LHU1f.png?imageslim\" alt=\"mark\"></p>\n<ol>\n<li>\n<p><strong>进入</strong>文件夹，鼠标<strong>右键</strong> 选中  <code>Git Bash Here</code> ，</p>\n<p>输入命令  <code>git add ./readme.md</code>  回车 。</p>\n</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/P1DnSzDuSOBO.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"2\">\n<li>紧接上一步，输入命令  <code>git commit -m &quot;add Introductions&quot;</code>  回车 。</li>\n</ol>\n<p><u>add Introductions</u>----- 可以自定义，一个辅助的解释 <strong>说明</strong>。</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/FqHM4n7stzsF.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"查看提交状态\"><a class=\"markdownIt-Anchor\" href=\"#查看提交状态\">#</a> 查看提交状态</h4>\n<p>命令： <code>git status</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/85IXkLM5Wusf.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"add-补充-添加到大门口\"><a class=\"markdownIt-Anchor\" href=\"#add-补充-添加到大门口\">#</a> add 补充 – 添加到大门口</h4>\n<p>命令 ： <code>git add .</code></p>\n<h4 id=\"一次性-放入仓库\"><a class=\"markdownIt-Anchor\" href=\"#一次性-放入仓库\">#</a> 一次性 – 放入仓库</h4>\n<blockquote>\n<p>合并 add 和 commit 命令</p>\n</blockquote>\n<p>命令： <code>git commit --all -m &quot;这是一次性的操作&quot;</code></p>\n<h3 id=\"git-查看日志\"><a class=\"markdownIt-Anchor\" href=\"#git-查看日志\">#</a> Git 查看日志</h3>\n<blockquote>\n<p>查看日志 ---- 能够查看自己提交的信息</p>\n<p><code>git log</code> ：查看历史提交的日志</p>\n<p><code>git log --oneline</code>  可以看到精简版的日志</p>\n</blockquote>\n<p>命令： <code>git log</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/PBubR1jYW0fX.png?imageslim\" alt=\"mark\"></p>\n<p>命令： <code>git log --oneline</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/bDLltWMjdSo2.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"git-版本回退\"><a class=\"markdownIt-Anchor\" href=\"#git-版本回退\">#</a> Git 版本回退</h3>\n<blockquote>\n<p>git 版本回退</p>\n<p>场景：如果最后一次提交的代码有误，可以通过 git 版本回退，回到代码无误的那一个状态。</p>\n</blockquote>\n<h4 id=\"根据索引回退\"><a class=\"markdownIt-Anchor\" href=\"#根据索引回退\">#</a> 根据索引回退</h4>\n<ol>\n<li>使用命令  <code>git log --oneline</code>  查看状态</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/3RDzcU0Fo8Vy.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"2\">\n<li>命令： <code>git reset --hard Head~0 </code>  ( 向后退 <strong>0</strong> 次)</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/Uobb7X1EwPUd.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"3\">\n<li>命令： <code>git reset --hard Head~1</code>  （向后退 <strong>1</strong> 次）；此时代码回退了<strong>一次</strong> 。</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/3lM4UYpv7mQw.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190711/rwuTTeqbAFNc.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"通过版本号回退\"><a class=\"markdownIt-Anchor\" href=\"#通过版本号回退\">#</a> 通过版本号回退</h4>\n<blockquote>\n<p>通过版本号回退</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/VsLjP0uf8h8D.png?imageslim\" alt=\"mark\"></p>\n<p>命令： <code>git reset --hard ac97cbc </code>  回车执行</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/puqQzAUO57un.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/4b2kofXa5m3B.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"git-reflog\"><a class=\"markdownIt-Anchor\" href=\"#git-reflog\">#</a> git reflog</h4>\n<blockquote>\n<p>可以看到每一次切换版本记录</p>\n</blockquote>\n<p>命令： <code>git reflog</code>  查看总体记录</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/rIsddoYu54q2.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"git-分支的新建与合并\"><a class=\"markdownIt-Anchor\" href=\"#git-分支的新建与合并\">#</a> Git 分支的新建与合并</h3>\n<blockquote>\n<p>git 创建分支</p>\n<p>运用场景：放开发者只开发完成部分代码，想保存代码，为了能够后续继续开发，可以创建分支。</p>\n</blockquote>\n<p><strong>现在让我们来看一个简单的分支与合并的例子，实际工作中大体也会用到这样的工作流程：</strong></p>\n<ol>\n<li>开发某个网站。</li>\n<li>为实现某个新的需求，创建一个分支。</li>\n<li>在这个分支上开展工作。</li>\n</ol>\n<p><strong>假设此时，你突然接到一个电话说有个很严重的问题需要紧急修补，那么可以按照下面的方式处理：</strong></p>\n<ol>\n<li>返回到原先已经发布到生产服务器上的分支。</li>\n<li>为这次紧急修补建立一个新分支，并在其中修复问题。</li>\n<li>通过测试后，回到生产服务器所在的分支，将修补分支合并进来，然后再推送到生产服务器上。</li>\n<li>切换到之前实现新需求的分支，继续工作。</li>\n</ol>\n<h3 id=\"git-分支的新建\"><a class=\"markdownIt-Anchor\" href=\"#git-分支的新建\">#</a> Git 分支的新建</h3>\n<p><strong>新建分支</strong> ：命令： <code>git branch &lt;name&gt;</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/vCIxtjnYlgsu.png?imageslim\" alt=\"mark\"></p>\n<p><strong>查看分支信息</strong> ：命令： <code>git branch</code>  （ <strong>绿色</strong> --&gt; 代表正处于此分支）</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/R3t4POgEphiO.png?imageslim\" alt=\"mark\"></p>\n<p><strong>切换分支</strong> ：命令  <code>git checkout dev</code></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/MQQVVoNGu41k.png?imageslim\" alt=\"mark\"></p>\n<h4 id=\"在分支中提交部分代码\"><a class=\"markdownIt-Anchor\" href=\"#在分支中提交部分代码\">#</a> 在分支中提交部分代码</h4>\n<blockquote>\n<p>类似于主分支 提交（一样）</p>\n</blockquote>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/gBcACkrl5Gxf.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"git-合并分支\"><a class=\"markdownIt-Anchor\" href=\"#git-合并分支\">#</a> Git 合并分支</h3>\n<blockquote>\n<p>合并分支</p>\n<p><strong>需求</strong>：将 dev 分支 合并到主分支（master 分支）上。</p>\n</blockquote>\n<ol>\n<li>切换到 <strong>master</strong> 分支：命令： <code>git checkout master</code></li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/bKIzXXwv3Xnm.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"2\">\n<li>合并 dev 分支 到 master 分支上：命令： <code>git merge dev</code></li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/uMQR0k4u6qTT.png?imageslim\" alt=\"mark\"></p>\n<ol start=\"3\">\n<li>查看自己的提交记录 命令： <code>git log --oneline</code></li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/gu7FKi6tGBkf.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"上传至-github\"><a class=\"markdownIt-Anchor\" href=\"#上传至-github\">#</a> 上传至 github</h3>\n<blockquote>\n<p><code>git push [地址] master</code></p>\n<p><a href=\"https://www.liaoxuefeng.com/wiki/896043488029600/900937935629664\">参考廖雪峰的官方网站 github 篇</a></p>\n<p>【地址】：例如：<a href=\"https://github.com/ZhChen7/Travel.git\">https://github.com/ZhChen7/Travel.git</a></p>\n</blockquote>\n<p><strong>git push</strong> 推项目到 github： <code>git push [地址] master</code></p>\n<h4 id=\"从-github-拉下项目\"><a class=\"markdownIt-Anchor\" href=\"#从-github-拉下项目\">#</a> 从 github 拉下项目</h4>\n<blockquote>\n<p>github 拉下项目</p>\n<p>【地址】：例如：<a href=\"https://github.com/ZhChen7/Travel.git\">https://github.com/ZhChen7/Travel.git</a></p>\n</blockquote>\n<p><strong>git pull</strong> 从 github 拉下项目 ： <code>git pull [地址] master</code></p>\n<p><strong>git clone</strong> 从 github 复制项目（往往在第一次使用）： <code>git clone [地址]</code></p>\n<h3 id=\"通过-ssh-方式-上传-代码\"><a class=\"markdownIt-Anchor\" href=\"#通过-ssh-方式-上传-代码\">#</a> 通过 ssh 方式 上传 代码</h3>\n<blockquote>\n<p>公钥 和 私钥 ；两者之间是有关联的。</p>\n</blockquote>\n<ol>\n<li>\n<p>生成 <strong>公钥</strong> 和 <strong>私钥</strong></p>\n<p>命令： <code>ssh-keygen -t rsa -C &lt;邮箱&gt;</code></p>\n</li>\n</ol>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/2GKvEKipn11B.png?imageslim\" alt=\"mark\"></p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/9qHzNoUvBgy2.png?imageslim\" alt=\"mark\"></p>\n<p><strong>找到生成的文件</strong> ：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/DPxGphRT9AXv.png?imageslim\" alt=\"mark\"></p>\n<p><strong>给自己的 github 配置 ssh</strong> ：</p>\n<p><img src=\"http://static.zxinc520.com/blog/20190712/eK9KUtgXVIrN.png?imageslim\" alt=\"mark\"></p>\n<h3 id=\"提交冲突\"><a class=\"markdownIt-Anchor\" href=\"#提交冲突\">#</a> 提交冲突</h3>\n<blockquote>\n<p>先 <strong>pull</strong> 还是 先 <strong>push</strong></p>\n<p>应用场景：多人共同提交时，产生提交冲突时。</p>\n</blockquote>\n<p><strong>解决方案</strong>：<strong>先 pull</strong> 然后 <strong>后 push</strong></p>\n<h3 id=\"push-和-pull-简写\"><a class=\"markdownIt-Anchor\" href=\"#push-和-pull-简写\">#</a> push 和 pull 简写</h3>\n<blockquote>\n<p>push 和 pull 简写</p>\n<p>【地址简写】： <code>git remote add &lt;变量名&gt; &lt;远程地址&gt;</code></p>\n</blockquote>\n<p><strong>配置远程地址</strong>（设置别名）：方便每一次不用输入很长的地址</p>\n<p>命令： <code>git remote add origin git@github.com:ZhChen7/Travel.git</code></p>\n<p>即：为  <code>git@github.com:ZhChen7/Travel.git</code>  设置别名： **origin **</p>\n<h4 id=\"默认关联\"><a class=\"markdownIt-Anchor\" href=\"#默认关联\">#</a> 默认关联</h4>\n<blockquote>\n<p>当我们在 push 时，加上 <strong>-u 参数</strong> ，那么在<strong>下次 push 时</strong>；只用 写  <code>git push</code>  即可上传代码。</p>\n<p>（加上 <strong>-u</strong> 之后，git 会把当前分支 与 远程指定的分支 进行<strong>关联</strong>）</p>\n</blockquote>\n<p>下次 直接写  <code>git push</code>  相当于 写  <code>git push origin master</code>  。</p>\n",
            "tags": [
                "Git"
            ]
        },
        {
            "id": "http://example.com/2019/03/15/MarkdownToHTML/",
            "url": "http://example.com/2019/03/15/MarkdownToHTML/",
            "title": "MarkdownToHtml",
            "date_published": "2019-03-15T08:44:07.000Z",
            "content_html": "<h1 id=\"markdowntohtml\"><a class=\"markdownIt-Anchor\" href=\"#markdowntohtml\">#</a> MarkdownToHtml</h1>\n<blockquote>\n<p>将 Markdown 文档转换为 HTML 显示</p>\n</blockquote>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\">#</a> 说明</h2>\n<blockquote>\n<p>本应用是采用 node.js + Express 搭建的</p>\n<p>运用的模板：art-template</p>\n<ul>\n<li><a href=\"https://aui.github.io/art-template/zh-cn/docs/index.html\">art-template</a> 是一个简约、超快的模板引擎。</li>\n</ul>\n</blockquote>\n<h1 id=\"准备工作\"><a class=\"markdownIt-Anchor\" href=\"#准备工作\">#</a> 准备工作</h1>\n<p>我把 <em><a href=\"http://MarkdownToHTML.md\">MarkdownToHTML.md</a></em> 放在目录 <strong>public/doc</strong> 下（放在那里看你心情咯！）</p>\n<h2 id=\"安装-marked\"><a class=\"markdownIt-Anchor\" href=\"#安装-marked\">#</a> 安装 marked</h2>\n<blockquote>\n<p>npm install marked --save</p>\n</blockquote>\n<h1 id=\"关键步骤\"><a class=\"markdownIt-Anchor\" href=\"#关键步骤\">#</a> 关键步骤</h1>\n<p>路由部分关键代码：router.js （ 里面的部分代码是关键 ）</p>\n<pre class=\"line-numbers language-Javascript\" data-language=\"Javascript\"><code class=\"language-Javascript\">src\n\nrouter.get(&quot;&#x2F;:docName&quot;, function (req, res, next) &#123;\n    docId &#x3D; req.params.docName.replace(&#x2F;&quot;&#x2F;g, &#39;&#39;)\n    publish.findById(docId, function (err, publish) &#123;\n        if (err) &#123;\n            return next(err)\n        &#125;\n        fs.readFile(__dirname + src + publish.publishMainBodyUrl + &#39;.md&#39;,           &#39;utf-8&#39;, function (err, data) &#123;\n            if (err) &#123;\n                console.log(err);\n            &#125; else &#123;\n                htmlStr &#x3D; marked(data.toString());\n                res.type(&#39;html&#39;)\n                message.find(&#123;\n                    message_type: publish.publishMainBodyUrl\n                &#125;, function (err, message) &#123;\n                    if (err) &#123;\n                        return next(err)\n                    &#125;\n                    message.forEach(function (e) &#123;\n                        e.UTCtodata &#x3D; new Date(e.message_time).toLocaleString()\n                    &#125;)\n                    res.render(&#39;MainBody.html&#39;, &#123;\n                        doc: htmlStr,\n                        publish: publish,\n                        message: message\n                    &#125;);\n                &#125;)\n            &#125;\n        &#125;);\n    &#125;)\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h2>\n<p>MainBody.html: 用 art-template 模板渲染后台传来的数据</p>\n<pre class=\"line-numbers language-HTML\" data-language=\"HTML\"><code class=\"language-HTML\">&lt;!--\n   &#123;&#123;@ doc &#125;&#125;或者  &lt;%- doc %&gt;\n （ @和- 很关键 &#x3D;&#x3D;&gt;原文输出语句不会对 HTML 内容进行转义处理，可能存在安全风险，请谨慎使用。这个坑害我多走了好多弯路。）\n--&gt;\n&lt;div id&#x3D;&quot;markfs&quot;&gt;\n    &#123;&#123;@ doc &#125;&#125; &lt;!-- 或者  &lt;%- doc %&gt; --&gt;\n&lt;&#x2F;div&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"效果展示\"><a class=\"markdownIt-Anchor\" href=\"#效果展示\">#</a> 效果展示</h2>\n<p><img src=\"http://static.zxinc520.com/blogimage/20190314/x6s26FzHS5go.png?imageslim\" alt=\"g\"></p>\n",
            "tags": [
                "art-template"
            ]
        }
    ]
}